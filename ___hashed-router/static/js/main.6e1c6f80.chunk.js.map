{"version":3,"sources":["templates/CreateEvaluatos/CreateEvaluators.module.scss","templates/EditEvaluators/EditEvaluators.module.scss","components/Sidebar/Sidebar.module.scss","Layout/Layout.module.scss","components/MuiTable/MuiTable.module.scss","views/ManageScrapers/ManageScrapers.module.scss","views/ScrapedData/ScrapedDataTable/ScrapedDataTable.module.scss","views/Page404/Page404.module.scss","templates/CreateModelOptions/CreateModelOptions.module.scss","components/Main/Main.module.scss","components/SiteLogo/SiteLogo.module.scss","components/Footer/Footer.module.scss","views/ManageScrapers/ScraperDetails/ScraperDetails.module.scss","components/Card/Card.module.scss","components/EmptyCardFlex/EmptyCardFlex.module.scss","components/Select/Select.module.scss","MainComponent.module.scss","templates/CreateScraperData/CreateScraperData.module.scss","views/ManageScrapers/RunScraperScript/RunScraperScript.module.scss","components/Header/Header.module.scss","hooks/useAuth.js","hooks/useWindowWidth.js","routes/index.js","components/Header/Header.js","components/Main/Main.js","components/SiteLogo/logo.png","components/SiteLogo/SiteLogo.js","components/Sidebar/Sidebar.js","components/Nav/Nav.js","components/Footer/Footer.js","Layout/Layout.js","components/Card/Card.js","config/index.js","views/Login/logo.png","views/Login/Login.js","views/Dashboard/Dashboard.js","hooks/useFetch.js","components/EmptyCardFlex/EmptyCardFlex.js","utilities/string/index.js","utilities/objects-array/index.js","components/MuiTable/MuiTable.js","views/ManageScrapers/ManageScrapers.js","components/CodeEditor/CodeEditor.js","components/Select/Select.js","templates/SelectSiteResource/SelectSiteResources.js","templates/CreateSiteResource/CreateSiteResource.js","templates/CreateScraperData/CreateScraperData.js","components/Radio/Radio.js","templates/CreateModelOptions/CreateModelOptions.js","templates/CreateEvaluatos/CreateEvaluators.js","views/ManageScrapers/CreateScraper/CreateScraper.js","views/ManageScrapers/RunScraperScript/RunScraperScript.js","templates/EditEvaluators/EditEvaluators.js","views/ManageScrapers/ScraperDetails/ScraperDetails.js","views/ScrapedData/ScrapedData.js","views/ScrapedData/ScrapedDataTable/ScrapedDataTable.js","views/ManageUsers/ManageUsers.js","views/ManageTasks/ManageTasks.js","views/Page404/Page404.js","MainComponent.js","theme/index.js","App.js","index.js","views/Login/Login.module.scss","components/Nav/Nav.module.scss","views/ManageScrapers/CreateScraper/CreateScraper.module.scss","templates/CreateSiteResource/CreateSiteResource.module.scss","views/ScrapedData/ScrapedData.module.scss","templates/SelectSiteResource/SelectSiteResources.module.scss"],"names":["module","exports","useAuth","useState","isLoggedIn","setIsLoggedIn","loggedUser","setLoggedUser","window","localStorage","getItem","authToken","setAuthToken","fileToken","setFileToken","tokenExpiration","setTokenExpiration","loginMessage","setLoginMessage","history","useHistory","logout","prev","removeItem","checkLoggedIn","Date","getTime","Number","JSON","parse","location","pathname","push","useEffect","console","log","login","res","xAuthToken","xFileToken","xTokenExpiration","userInfo","statusOk","message","setItem","stringify","useWindowWidth","callback","innerWidth","windowWidth","setWindowWidth","addEventListener","mainNavObjectsArr","title","path","shown","children","Header","className","openMenuHandler","menuActive","styles","firstName","active","onClick","e","bind","this","to","Main","SiteLogo","src","logo","Sidebar","Nav","navObjectsArr","setActiveParentMenu","setActiveChildMenu","href","currentUrl","parentMenus","Array","from","document","querySelectorAll","nav","childMenus","forEach","item","classList","remove","activeParent","find","includes","activeChild","add","setActiveParentHandler","target","setActiveChildHandler","parentElement","querySelector","length","map","child","Footer","year","getFullYear","Layout","setActive","wrapper","Card","style","width","card","baseUrl","fileUrl","Login","username","setUsername","password","setPassword","loggingIn","setLoggingIn","messageType","setMessageType","onChangeHandler","inputName","setter","value","trim","submitHandler","a","preventDefault","fetch","method","headers","body","then","json","jsonData","Error","catch","err","action","onSubmit","FormControl","fullWidth","TextField","onChange","label","type","Button","variant","size","color","disableElevation","startIcon","disabled","CircularProgress","height","Dashboard","pageTitle","useFetch","apiEndPoint","fetchOptions","initialValue","data","setData","isLoading","setIsLoading","hasError","setHasError","fetchMessage","setFetchMessage","abortCont","AbortController","signal","ok","name","abort","EmptyCardFlex","toNormalString","str","previousFormat","replace","char","toUpperCase","split","toCapitalize","join","index","getAllObjectKeys","objects","reduce","b","Object","keys","key","isObjectUnique","obj","objectsArray","overAllResults","object","results","every","isObjectInArray","array","some","useStyles","makeStyles","root","container","maxHeight","StickyHeadTable","tableData","uniqueId","excludedColumns","classes","React","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","isArray","id","align","minWidth","maxWidth","filter","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","imagePaths","alt","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","ManageScrapers","scrapers","isLoadingTableData","optionClickHandler","display","justifyContent","_id","backgroundColor","includedKeys","flexDirection","Divider","margin","Alert","severity","CodeEditor2","padding","placeholder","language","fontSize","fontFamily","minHeight","border","theme","formControl","selectEmpty","marginTop","spacing","Select2","options","uniqueProp","optionLabelProp","selectOnchangeHandler","defaultValue","selectedOption","setSeletedOption","select","InputLabel","Select","labelId","MenuItem","selected","SelectSiteResource","selectOptions","selectedSiteResource","setSelectHandler","createReadyHandler","hasSelected","setHasSelected","siteName","siteUrl","CreateSiteResource","siteResourceHandler","siteResource","setSiteResource","setMessage","url","changeHandler","setTimeout","form","noValidate","autoComplete","CreateScraperData","currentValue","setScraperDataHandler","backButtonHandler","cancelHandler","scraperDetails","setScraperDetails","productBrandErrorMessage","setProductBrandErrorMessage","imagePropNameErrorMessage","setImagePropNameErrorMessage","uniqueSplitErrorMessage","setUniqueSplitErrorMessage","arrItemError","setArrItemError","splitItem","sharedItem","csvExcludedPropsItem","arrItem","setArrItem","prop","arrInputChangeHandler","addItemToArrayInObjectHandler","propName","arrName","arr","handleDeleteChipEntry","productBrand","imagePropName","imageNameObject","Chip","onDelete","deleteIcon","shared","csvExcludedProps","endIcon","RadioButtonsGroup","legend","radioOptions","setValue","FormLabel","RadioGroup","FormControlLabel","control","Radio","CreateModelSchema","setModelObjectHandler","modelObjectOptions","setModelObjectOptions","saveButtonEnabled","setSavedButtonEnabled","schema","propKey","schemaArray","setSchemaArray","addSchemaButtonDisabled","setAddSchemaButtonDisabled","schemaKey","setSchemaKey","schemaKeyType","setSchemaKeyType","schemaKeyRequired","setSchemaKeyRequired","schemaError","setSchemaError","friendlyUrlProps","immutableProps","uniqueProps","propObjectsErrMessage","setPropObjectsErrMessage","initializedProps","propObjects","setPropObjects","friendlyUrlProp","setFriendlyUrlProp","immutableProp","setImmutableProp","setUniqueProp","addSchemaHandler","schemaObject","required","deleteSchemaHandler","propObjectChangeHandler","addPropObjects","IconButton","CreateEvaluators","currentUsageValue","currentGroupIdentifierKeyValue","currentSchema","setEvaluatorObjectsHandler","setUsageHandler","setGroupIdentifierKeyHandler","evaluatorObjects","setEvaluatorObjects","submitButtonEnabled","setSubmitButtonEnabled","addEvaluatorButtonEnabled","setAddEvaluatorButtonEnabled","setCallback","setType","waitMethods","setWaitMethods","args","currentWaitMethod","setCurrentWaitMethod","addWaitMethodButtonReady","setAddWaitMethodButtonReady","waitMethodError","setWaitMethodError","showPaginated","setShowPaginated","paginated","setPaginated","objPropArgs","setObjPropArgs","objPropArgsError","setObjPropArgsError","currentPropArg","setCurrentPropArg","addObjPropArgsButtonEnabled","setAddObjPropArgsButtonEnabled","productUrlProp","setProductUrlProp","productUrlPropError","setProductUrlPropError","usage","setUsage","groupIdentifierKey","setGroupIdentifierKey","removeWaitMethodHandler","waitMethodInputChangeHandler","handleDeleteObjPropArgs","addEvaluatorObjectHandler","prv","removeEvaluatorHandler","evaluator","i","toString","fontWeight","waitMethod","prevState","multiline","CreateScraper","selectOn","setSelectOn","setSelectOptions","siteResourceReady","setSiteResourceReady","scraperDetailsReady","setScraperDetailsReady","imageUris","modelObjectOptionsReady","setModelObjectOptionsReady","recordName","pluralized","routeObjectOptions","setRouteObjectOptions","evaluatorObjectsReady","setEvaluatorObjectsReady","loading","submitObject","setSubmitObject","state","saveScraperHandler","scraperDetailsObj","boolState","modelObject","values","RunScraperScript","useParams","scraperData","setSiteName","setProductBrand","setSiteUrl","setCsvExcludedProps","apiRoute","setApiRoute","evaluatorIndexes","setEvaluatorIndexes","scriptId","setScriptId","productsListEvaluatorUris","setProductsListEvaluatorUris","groupIdentifier","setGroupIdentifier","evaluatorArgs","setEvaluatorArgs","scriptRunning","setScriptRunning","scrapingMessage","setScrapingMessage","scrapingStatus","setScrapingStatus","downloadingZip","setDownloadingZip","savingToDb","setSavingToDb","savingDataMessage","setSavingDataMessage","savingDataStatus","setSavingDataStatus","scrapedData","setScrapedData","unscrapedData","setUnscrapedData","submitEnabled","setSubmitEnabled","groupIdentifierKeyChangeHandler","evaluatorUriChangeHandler","evaluatorObjectIndex","arrIndex","runScraperScriptHandler","scrapedProducts","downloadZipHandler","filePath","downloadUrl","aElem","createElement","setAttribute","click","saveDataHandler","subApiRoute","evaluatorIndex","EditEvaluators","status","setStatus","ScraperDetails","modalOpen","setModalOpen","editingEvaluatorObjects","setEditingEvaluatorObjects","deleteScriptHandler","modalSetter","setLoading","Modal","onClose","open","alignItems","paddingRight","ManageScrapedData","siteResources","fetchLoading","productSets","filteredScrapers","setFilteredScrapers","filteredProductSets","setFilteredProductSets","scraper","setScraper","productSet","setProductSet","productsData","setProductsData","dirPath","dataDirPath","createUrl","labelName","productData","setProductData","queryString","search","dataObject","Page404","getRoute","route","routes","main","exact","createTheme","palette","primary","blue","secondary","blueGrey","error","red","typography","button","textTransform","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e1c6f80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateEvaluators_main-container__L1QLS\",\"template-title\":\"CreateEvaluators_template-title__3joHi\",\"template-subtitle\":\"CreateEvaluators_template-subtitle__34U99\",\"template-section-title\":\"CreateEvaluators_template-section-title__HOskF\",\"error-message\":\"CreateEvaluators_error-message__3O6N1\",\"description\":\"CreateEvaluators_description__1nUIX\",\"buttons-container\":\"CreateEvaluators_buttons-container__o_nle\",\"added-evaluator-container\":\"CreateEvaluators_added-evaluator-container__3sKxr\",\"added-evaluator-object-container\":\"CreateEvaluators_added-evaluator-object-container__k62aU\",\"wait-methods-container\":\"CreateEvaluators_wait-methods-container__1DaOB\",\"added-methods\":\"CreateEvaluators_added-methods__2V2HE\",\"wait-method-input-container\":\"CreateEvaluators_wait-method-input-container__31vrb\",\"input-container-array\":\"CreateEvaluators_input-container-array__2sgoC\",\"field-container\":\"CreateEvaluators_field-container__2axJd\",\"evaluator-options\":\"CreateEvaluators_evaluator-options__1m5TU\",\"chip-container\":\"CreateEvaluators_chip-container__1xZ46\",\"evaluator-object-container\":\"CreateEvaluators_evaluator-object-container__smZQj\",\"input-container\":\"CreateEvaluators_input-container__3ivrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"EditEvaluators_main-container__rVkYk\",\"template-title\":\"EditEvaluators_template-title__311Zh\",\"template-subtitle\":\"EditEvaluators_template-subtitle__25f9z\",\"template-section-title\":\"EditEvaluators_template-section-title__S2k_j\",\"error-message\":\"EditEvaluators_error-message__jq0Lc\",\"description\":\"EditEvaluators_description__4cI0s\",\"buttons-container\":\"EditEvaluators_buttons-container__ez580\",\"added-evaluator-container\":\"EditEvaluators_added-evaluator-container__40-o0\",\"added-evaluator-object-container\":\"EditEvaluators_added-evaluator-object-container__2SuVM\",\"wait-methods-container\":\"EditEvaluators_wait-methods-container__3Wsra\",\"added-methods\":\"EditEvaluators_added-methods__14x5C\",\"wait-method-input-container\":\"EditEvaluators_wait-method-input-container__11_d1\",\"input-container-array\":\"EditEvaluators_input-container-array__i589F\",\"field-container\":\"EditEvaluators_field-container__2hPyU\",\"evaluator-options\":\"EditEvaluators_evaluator-options__9Mulg\",\"chip-container\":\"EditEvaluators_chip-container__hmug_\",\"evaluator-object-container\":\"EditEvaluators_evaluator-object-container__3DTv-\",\"input-container\":\"EditEvaluators_input-container__101bE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-sidebar\":\"Sidebar_main-sidebar__3Rgi_\",\"active\":\"Sidebar_active__1nQ3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__1I9fC\",\"main-section\":\"Layout_main-section__2RRp_\",\"active\":\"Layout_active__OP-CQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mui-table-container\":\"MuiTable_mui-table-container__mf75k\",\"mui-table\":\"MuiTable_mui-table__3hYFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ManageScrapers_template-title__1gYDy\",\"template-subtitle\":\"ManageScrapers_template-subtitle__2TNtk\",\"template-section-title\":\"ManageScrapers_template-section-title__2jxgT\",\"error-message\":\"ManageScrapers_error-message__fE1x8\",\"description\":\"ManageScrapers_description__1QpS5\",\"buttons-container\":\"ManageScrapers_buttons-container__1fUxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ScrapedDataTable_template-title__lXkco\",\"highlighted\":\"ScrapedDataTable_highlighted__O759G\",\"highlighted-2\":\"ScrapedDataTable_highlighted-2__i85Az\",\"template-subtitle\":\"ScrapedDataTable_template-subtitle__1ZE-H\",\"template-section-title\":\"ScrapedDataTable_template-section-title__270TT\",\"error-message\":\"ScrapedDataTable_error-message__3-DCc\",\"description\":\"ScrapedDataTable_description__1TPFq\",\"buttons-container\":\"ScrapedDataTable_buttons-container__2-RKT\",\"field-container\":\"ScrapedDataTable_field-container__3mUye\",\"main-container\":\"ScrapedDataTable_main-container__1lgwO\",\"action-buttons-container\":\"ScrapedDataTable_action-buttons-container__3leEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404-container\":\"Page404_page404-container__3XbcL\",\"page404-error\":\"Page404_page404-error__HwDsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateModelOptions_main-container__2q2wt\",\"template-title\":\"CreateModelOptions_template-title__1a1hx\",\"template-subtitle\":\"CreateModelOptions_template-subtitle__SQ-Js\",\"template-section-title\":\"CreateModelOptions_template-section-title__2aKby\",\"model-object-container\":\"CreateModelOptions_model-object-container__1sG63\",\"schema-container\":\"CreateModelOptions_schema-container__3svsi\",\"delete-button\":\"CreateModelOptions_delete-button__1QvLU\",\"form-container\":\"CreateModelOptions_form-container__38ByB\",\"form\":\"CreateModelOptions_form__1ib5V\",\"input-container\":\"CreateModelOptions_input-container__3dBpU\",\"field-container\":\"CreateModelOptions_field-container__1bR8B\",\"error-message\":\"CreateModelOptions_error-message__2KfyY\",\"input-container-array\":\"CreateModelOptions_input-container-array__1V5SL\",\"description\":\"CreateModelOptions_description__2i8lD\",\"result-container\":\"CreateModelOptions_result-container__11MS-\",\"input-container-2\":\"CreateModelOptions_input-container-2__1sUPq\",\"button-container\":\"CreateModelOptions_button-container__2ZmVy\",\"buttons-container\":\"CreateModelOptions_buttons-container__1Wy5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-content\":\"Main_main-content__2PId1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"site-logo\":\"SiteLogo_site-logo__15HOR\",\"active\":\"SiteLogo_active__16QxB\",\"selected\":\"SiteLogo_selected__2Mn19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-footer\":\"Footer_main-footer__2ckRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ScraperDetails_main-container__3g4oz\",\"label\":\"ScraperDetails_label__c7_Ox\",\"template-title\":\"ScraperDetails_template-title__3pSuX\",\"highlighted\":\"ScraperDetails_highlighted__3C83h\",\"template-subtitle\":\"ScraperDetails_template-subtitle__XZHNU\",\"template-section-title\":\"ScraperDetails_template-section-title__1rWL0\",\"error-message\":\"ScraperDetails_error-message__3-TZk\",\"description\":\"ScraperDetails_description__380T_\",\"buttons-container\":\"ScraperDetails_buttons-container__3Bc2j\",\"container\":\"ScraperDetails_container__sEQ48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__20Eqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"EmptyCardFlex_empty__1HqJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3yWx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainComponent_main__3ufCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"CreateScraperData_form-container__15urQ\",\"template-title\":\"CreateScraperData_template-title__1B-r0\",\"error-message\":\"CreateScraperData_error-message__207TQ\",\"form\":\"CreateScraperData_form__1IJtr\",\"input-container\":\"CreateScraperData_input-container__2cQXY\",\"field-container\":\"CreateScraperData_field-container__-yxIW\",\"input-container-array\":\"CreateScraperData_input-container-array__oVrpj\",\"description\":\"CreateScraperData_description__1xkam\",\"result-container\":\"CreateScraperData_result-container__1fVG7\",\"buttons-container\":\"CreateScraperData_buttons-container__2B9HU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"RunScraperScript_template-title__1nedh\",\"highlighted\":\"RunScraperScript_highlighted__34vZI\",\"highlighted-2\":\"RunScraperScript_highlighted-2__M1ahb\",\"template-subtitle\":\"RunScraperScript_template-subtitle__1eAiT\",\"template-section-title\":\"RunScraperScript_template-section-title__34btA\",\"error-message\":\"RunScraperScript_error-message__1NIb0\",\"description\":\"RunScraperScript_description__34Nnt\",\"buttons-container\":\"RunScraperScript_buttons-container__3D2rQ\",\"field-container\":\"RunScraperScript_field-container__1q1UQ\",\"main-container\":\"RunScraperScript_main-container__2UzuV\",\"action-buttons-container\":\"RunScraperScript_action-buttons-container__3s59l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"Header_main-header__SyFsk\",\"button-container\":\"Header_button-container__3vTF9\",\"nav-button\":\"Header_nav-button__YOvZq\",\"bar-container\":\"Header_bar-container__1jh_l\",\"bar\":\"Header_bar__MYPLZ\",\"active\":\"Header_active__25cHA\",\"navButtonBars\":\"Header_navButtonBars__2hIiM\",\"header-nav\":\"Header_header-nav__239iq\",\"selected\":\"Header_selected__XuCDQ\"};","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useAuth()   {\r\n    let [isLoggedIn, setIsLoggedIn] = useState(false),\r\n        [loggedUser, setLoggedUser] = useState(null),\r\n        [authToken, setAuthToken] = useState(window.localStorage.getItem(\"x-auth-token\")),\r\n        [fileToken, setFileToken] = useState(window.localStorage.getItem(\"x-file-token\")),\r\n        [tokenExpiration, setTokenExpiration] = useState(window.localStorage.getItem(\"x-token-expiration\") || 0),\r\n        [loginMessage, setLoginMessage] = useState(null),\r\n        history = useHistory();\r\n        \r\n\r\n    const logout = () => {\r\n        setIsLoggedIn(prev => false);\r\n        setLoginMessage(prev => null);\r\n        setAuthToken(prev => null);\r\n        setFileToken(prev => null);\r\n        setLoggedUser(prev => null);\r\n        setTokenExpiration(prev => 0);\r\n\r\n        window.localStorage.removeItem(\"x-auth-token\");\r\n        window.localStorage.removeItem(\"x-file-token\");\r\n        window.localStorage.removeItem(\"x-logged-user\");\r\n        window.localStorage.removeItem(\"x-token-expiration\");\r\n    }\r\n\r\n\r\n    const login = (res) => {\r\n        let {authToken : xAuthToken, fileToken : xFileToken, tokenExpiration : xTokenExpiration, userInfo, statusOk, message} = res;\r\n\r\n        if(statusOk)    {\r\n            setIsLoggedIn(prev => statusOk);\r\n            setLoginMessage(prev => message);\r\n            setAuthToken(prev => {\r\n                window.localStorage.setItem(\"x-auth-token\", xAuthToken);\r\n                return xAuthToken\r\n            });\r\n            setFileToken(prev => {\r\n                window.localStorage.setItem(\"x-file-token\", xFileToken);\r\n                return xFileToken\r\n            });\r\n            setLoggedUser(prev => {\r\n                window.localStorage.setItem(\"x-logged-user\", JSON.stringify(userInfo, null, 4));\r\n                return userInfo\r\n            });\r\n            setTokenExpiration(prev => {\r\n                window.localStorage.setItem(\"x-token-expiration\", Number(xTokenExpiration));\r\n                return Number(xTokenExpiration);\r\n            });\r\n\r\n            \r\n\r\n        }  else {\r\n            setIsLoggedIn(prev => false);\r\n            logout();\r\n\r\n        }\r\n\r\n        return {authToken, fileToken, loggedUser, isLoggedIn, loginMessage};\r\n        \r\n    }\r\n\r\n    const checkLoggedIn = () => {\r\n        \r\n        if( new Date().getTime() < Number(tokenExpiration) )   {\r\n            setIsLoggedIn(prev => {\r\n                setLoggedUser(prev => {\r\n                    return JSON.parse(window.localStorage.getItem(\"x-logged-user\"));\r\n                });\r\n                return true;\r\n            });\r\n\r\n\r\n            if(window.location.pathname === \"/login\")   {\r\n                history.push(\"/\");\r\n            }\r\n\r\n\r\n        } else  {\r\n            setIsLoggedIn(prev => false);\r\n            setLoginMessage(prev => null);\r\n            setAuthToken(prev => null);\r\n            setFileToken(prev => null);\r\n            setLoggedUser(prev => null);\r\n            setTokenExpiration(prev => 0)\r\n\r\n            window.localStorage.removeItem(\"x-auth-token\");\r\n            window.localStorage.removeItem(\"x-file-token\");\r\n            window.localStorage.removeItem(\"x-logged-user\");\r\n            window.localStorage.removeItem(\"x-token-expiration\");\r\n            history.push(\"/login\");\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n\r\n        return () => console.log(\"Authentication checked.\");\r\n    }, [isLoggedIn]);\r\n\r\n\r\n    return {authToken, fileToken, loggedUser, isLoggedIn, loginMessage, login, logout, checkLoggedIn};\r\n\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useWindowWidth(callback)    {\r\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", function(){\r\n            setWindowWidth(window.innerWidth);\r\n        });\r\n        window.addEventListener(\"load\", function(){\r\n            setWindowWidth(window.innerWidth);\r\n        });\r\n\r\n        callback();\r\n    });\r\n\r\n    return windowWidth;\r\n}\r\n\r\n\r\n\r\n","const mainNavObjectsArr = [    \r\n    {\r\n        title : \"Manage Scrapers\",\r\n        path : \"/manage-scrapers\",\r\n        shown : true,\r\n        children : [],\r\n    },\r\n    {\r\n        title : \"Scraped / Stored Data\",\r\n        path : \"/scraped-data\",\r\n        children : [],\r\n    },\r\n    {\r\n        title : \"Manage Users\",\r\n        path : \"/manage-users\",\r\n        children : [\r\n            // {\r\n            //     title : \"Create a User\",\r\n            //     path : \"/manage-users/create-user\"\r\n            // },\r\n            // {\r\n            //     title : \"Update a User\",\r\n            //     path : \"/manage-users/update-user/:id\"\r\n            // },\r\n            // {\r\n            //     title : \"Delete a User\",\r\n            //     path : \"/manage-users/delete-user/:id\"\r\n            // }\r\n        ],\r\n    },\r\n    {\r\n        title : \"Manage Tasks\",\r\n        path : \"/manage-tasks\",\r\n        children : [\r\n            // @ic@yumi1828\r\n            // {\r\n            //     title : \"Create a Task\",\r\n            //     path : \"/manage-tasks/create-scraper\"\r\n            // },\r\n            // {\r\n            //     title : \"Update a Task\",\r\n            //     path : \"/manage-tasks/update-scraper/:id\"\r\n            // },\r\n            // {\r\n            //     title : \"Delete a Task\",\r\n            //     path : \"/manage-tasks/delete-scraper/:id\"\r\n            // }\r\n        ],\r\n    }\r\n];\r\n\r\n\r\nexport default mainNavObjectsArr;","import { Link } from \"react-router-dom\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\";\r\n\r\n// styles\r\nimport styles from \"./Header.module.scss\";\r\n\r\nexport default function Header({loggedUser, className, openMenuHandler, menuActive}) {\r\n\r\n    let windowWidth = useWindowWidth(() => {})\r\n\r\n    const { logout } = useAuth();\r\n    \r\n    const logoutHandler = (e) => {\r\n        // e.preventDefault();\r\n        logout();\r\n    }\r\n\r\n    const menuClickHandler = (e) => {\r\n        openMenuHandler();\r\n    }\r\n\r\n    return  (\r\n        <header className={`${styles[\"main-header\"]} ${className}`}>\r\n            \r\n            <h1>Welcome to CC Scraper App, <span>{loggedUser.firstName}</span>!</h1>\r\n            {windowWidth < 768 && \r\n                <div className={styles[\"button-container\"]}>\r\n                    <div className={`${styles[\"nav-button\"]} ${menuActive ? styles.active : null}`} onClick={menuClickHandler.bind(this)}>\r\n                        <div className={styles[\"bar-container\"]}>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <nav className={styles[\"header-nav\"]}>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/my-profile\">My Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/login\" onClick={logoutHandler}>Logout</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}","import styles from \"./Main.module.scss\";\r\n\r\nexport default function Main({children})    {\r\n    \r\n    return (\r\n        <main className={styles[\"main-content\"]}>\r\n            {children}\r\n        </main>\r\n    )\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logo.07fa326a.png\";","// core\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// styles\r\nimport styles from \"./SiteLogo.module.scss\";\r\n\r\nimport logo from \"./logo.png\";\r\n\r\nexport default function SiteLogo()  {\r\n\r\n    return (\r\n        <h1 className={styles[\"site-logo\"]}>\r\n            <Link to=\"/\">\r\n            <img src={logo} />\r\n            </Link>\r\n            <Link to=\"/\">\r\n                CC Scraper App\r\n            </Link>\r\n        </h1>\r\n    )\r\n\r\n}","import styles from \"./Sidebar.module.scss\";\r\n\r\nexport default function Sidebar({children, className, menuActive})   {\r\n    return (\r\n        <aside className={`${styles[\"main-sidebar\"]} ${className} ${menuActive ? styles.active : \"\"}`}>\r\n            {children}\r\n        </aside>\r\n    )\r\n}","import {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from \"./Nav.module.scss\";\r\nimport \"./Nav.scss\";\r\n\r\n\r\nexport default function Nav({navObjectsArr, className}) {\r\n\r\n    let [activeParentMenu, setActiveParentMenu] = useState(null),\r\n        [activeChildMenu, setActiveChildMenu] = useState(null),\r\n        [currentUrl, setCurrentUrl] = useState(window.location.href)\r\n        \r\n    useEffect(() => {\r\n        let parentMenus = Array.from(document.querySelectorAll(`.${styles.nav} > ul > li > a`)),\r\n            childMenus = Array.from(document.querySelectorAll(`.${styles.nav} > ul > li > ul > li a`));\r\n\r\n        parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n        childMenus.forEach(item => item.classList.remove(`active-child`));\r\n\r\n        let activeParent = parentMenus.find(item => currentUrl.includes(item.href)),\r\n            activeChild = childMenus.find(item => item.href === window.location.href);\r\n\r\n        if(activeParent) {\r\n            setActiveParentMenu(prev => activeParent);\r\n            activeParent.classList.add(`active-parent`);\r\n        }\r\n        if(activeChild) {\r\n            setActiveChildMenu(prev => activeChild)\r\n            activeChild.classList.add(`active-child`);\r\n        };\r\n\r\n    }, [currentUrl]);\r\n\r\n    const setActiveParentHandler = (e) => {\r\n\r\n        let parentMenus = Array.from(document.querySelectorAll(`.${styles.nav} > ul > li > a`)),\r\n            childMenus = Array.from(document.querySelectorAll(`.${styles.nav} > ul > li > ul > li a`));\r\n\r\n        parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n        childMenus.forEach(item => item.classList.remove(`active-child`));\r\n        e.target.classList.add(`active-parent`);\r\n    }\r\n\r\n    const setActiveChildHandler = (e) => {\r\n        let parentMenus = Array.from(document.querySelectorAll(`.${styles.nav} > ul > li > a`)),\r\n            childMenus = Array.from(document.querySelectorAll(`.${styles.nav} > ul > li > ul > li a`));\r\n            \r\n        parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n        childMenus.forEach(item => item.classList.remove(`active-child`));\r\n        e.target.classList.add(`active-child`);\r\n        e.target.parentElement.parentElement.parentElement.querySelector(\"a\").classList.add(\"active-parent\");\r\n    }\r\n\r\n    return (\r\n        <nav className={`${styles.nav} ${className} nav`}>\r\n            <ul>\r\n                {navObjectsArr.length > 0 && \r\n                \r\n                    navObjectsArr.map(item => {\r\n                        return (\r\n                            <li key={item.path}>\r\n                                <Link onClick={setActiveParentHandler.bind(this)} key={item.path} to={item.path}>{item.title}</Link>\r\n                                {item.children.length > 0 && \r\n                                    <ul>\r\n                                        {item.children.map(child => {\r\n                                            return (\r\n                                                <li key={child.path}><Link onClick={setActiveChildHandler.bind(this)} to={child.path}>{child.title}</Link></li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                }\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import styles from \"./Footer.module.scss\";\r\n\r\nexport default function Footer({children})    {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n        <footer className={styles[\"main-footer\"]}>\r\n            {children}\r\n            <p>&copy; CC Scraper App {year}. All Rights Reserved.</p>\r\n        </footer>\r\n    );\r\n}","// hooks\r\nimport { useState } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\n\r\n// routes\r\nimport mainNavObjectsArr from \"../routes\";\r\n\r\n// components\r\nimport Header from \"../components/Header\";\r\nimport Main from \"../components/Main\";\r\nimport SiteLogo from \"../components/SiteLogo\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Nav from \"../components/Nav\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\n// styles\r\nimport styles from \"./Layout.module.scss\";\r\n\r\nexport default function Layout({ children })  {\r\n\r\n    let [active, setActive] = useState(true),\r\n        windowWidth = useWindowWidth(() => {});\r\n\r\n    const {isLoggedIn, loggedUser, authToken, fileToken, login, logout} = useAuth();\r\n\r\n    const openMenuHandler = (e) => {\r\n        setActive(prev => !prev);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {isLoggedIn && loggedUser && \r\n            <>\r\n                <div className={styles[\"main-section\"] } onClick={() => {\r\n                    if(active) setActive(prev => false);\r\n                }}>\r\n                    <Header loggedUser={loggedUser} className=\"card\" openMenuHandler={openMenuHandler} menuActive={active}></Header>\r\n                    <Main>{children}</Main>\r\n                    <Footer></Footer>\r\n                </div>\r\n                <Sidebar className=\"card\" menuActive={active}>\r\n                    <SiteLogo></SiteLogo>\r\n                    <Nav navObjectsArr={mainNavObjectsArr} />\r\n                </Sidebar>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}","// styles\r\nimport styles from \"./Card.module.scss\";\r\n\r\nexport default function Card({ children, className, style, width })  {\r\n    return (\r\n        <div className={`${styles.card} ${className}`} style={{...style, width}}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","// export const baseUrl = \"http://localhost:7747\";\r\n// export const fileUrl = `${baseUrl}/files/`;\r\n// export const socketUrl = `http://localhost:7773`;\r\n\r\nexport const baseUrl = \"\";\r\nexport const fileUrl = `${baseUrl}/files/`;\r\nexport const socketUrl = ``;","export default __webpack_public_path__ + \"static/media/logo.07fa326a.png\";","// hooks\r\nimport { useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport { Button, TextField, FormControl, CircularProgress } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\n\r\n//config\r\nimport { baseUrl } from \"../../config/\"; \r\nimport logo from \"./logo.png\";\r\n\r\n\r\nimport styles from \"./Login.module.scss\";\r\n\r\nexport default function Login() {\r\n    \r\n    const { login, isLoggedIn } = useAuth();\r\n\r\n    let [username, setUsername] = useState(\"\"),\r\n        [password, setPassword] = useState(\"\"),\r\n        [loginMessage, setLoginMessage] = useState(null),\r\n        [loggingIn, setLoggingIn] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n        history = useHistory();\r\n    \r\n\r\n\r\n    const onChangeHandler = (inputName, e) => {\r\n        let setter = inputName === \"username\" ? setUsername : setPassword,\r\n            value = e.target.value.trim();\r\n\r\n        setter(prev => value);\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setLoggingIn(prev => true);\r\n        setMessageType(prev => \"info\");\r\n        \r\n        \r\n        fetch(`${baseUrl}/api/login`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n            },\r\n            body : JSON.stringify({username, password}),\r\n        })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(jsonData => {\r\n            let {statusOk, message} = jsonData;\r\n            if(!statusOk)    {\r\n                throw Error(message);\r\n                \r\n            } else  {\r\n                login(jsonData);\r\n                history.push(\"/\");\r\n                setLoggingIn(false);\r\n                setLoginMessage(prev => \"You have successfully logged in.\");\r\n                setMessageType(prev => \"success\");\r\n\r\n            }\r\n        })\r\n        .catch(err => {\r\n            setLoggingIn(false);\r\n            setLoginMessage(err.message);\r\n            setMessageType(prev => \"error\");\r\n        });\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className={styles.login}>\r\n            <div className={styles[\"main-container\"]}>\r\n                \r\n                <Card className={styles[\"form-container\"]}>\r\n                    <div className={styles[\"logo-container\"]}>\r\n                        <img src={logo} className={styles[\"logo\"]} /><h1 className={styles[\"site-name\"]}>CC Scraper App</h1>\r\n                    </div>\r\n                    \r\n                    <form action=\"\" onSubmit={submitHandler.bind(this)}>\r\n                    \r\n                        <FormControl fullWidth>\r\n                            <TextField value={username}onChange={onChangeHandler.bind(this, \"username\")} label=\"Username\" />\r\n                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <TextField type=\"password\" value={password}onChange={onChangeHandler.bind(this, \"password\")} label=\"Password\" />\r\n                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                        </FormControl>\r\n                        {!loggingIn && <Button type=\"button\" variant=\"contained\" size=\"large\" color=\"primary\" disableElevation startIcon={<ExitToAppIcon />} type=\"submit\">Login</Button>}\r\n                        {loggingIn && <Button type=\"button\" variant=\"contained\" size=\"large\" color=\"primary\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>} type=\"submit\">Logging in...</Button>}\r\n                    </form>\r\n                    {loginMessage && messageType === \"success\" && <p className={styles[\"template-section-title\"]}>{loginMessage}</p>}\r\n                    {loginMessage && messageType === \"error\" && <p className={styles[\"error-message\"]}>{loginMessage}</p>}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import useAuth from \"../../hooks/useAuth\";\r\n\r\nexport default function Dashboard({pageTitle}) {\r\n\r\n    return  (\r\n        <>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n        </>\r\n    )\r\n\r\n}","import {useState, useEffect} from \"react\";\r\nimport  { baseUrl, fileUrl } from \"../config\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nexport default function useFetch(apiEndPoint, fetchOptions, initialValue = [])  {\r\n\r\n    let [data, setData] = useState(initialValue),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [hasError, setHasError] = useState(false),\r\n        [fetchMessage, setFetchMessage] = useState(null),\r\n        { authToken } = useAuth(),\r\n        abortCont = new AbortController();\r\n\r\n        // console.log(baseUrl, fileUrl);\r\n\r\n    useEffect(async () => {\r\n        setIsLoading(true);\r\n        setFetchMessage(prev => \"We are currently fetching the data from the database.\");\r\n        setHasError(false);\r\n        if(authToken)   {\r\n            fetch(`${baseUrl}${apiEndPoint}`, {\r\n                ...fetchOptions,\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal\r\n            })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We couldn't fetch the data\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(jsonData => {\r\n                setIsLoading(false);\r\n                setHasError(false);\r\n                setFetchMessage(prev => \"We have successfully fetched the data.\");\r\n                setData(prev => jsonData);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(false);\r\n                    setHasError(true);\r\n                    setFetchMessage(err.message);\r\n                }\r\n            })\r\n\r\n            return () => abortCont.abort();\r\n        }\r\n        \r\n    }, [authToken]);\r\n\r\n    return {data, setData, isLoading, hasError, fetchMessage};\r\n}","import styles from \"./EmptyCardFlex.module.scss\";\r\n\r\nexport default function EmptyCardFlex({ children, style, className }) {\r\n    return (\r\n        <div className={`${styles[\"empty\"]} ${className}`}style={style}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","// some non-db related helper functions\r\n\r\n\r\nexport function toUrl(str) {\r\n    return Array.from(str.toLowerCase().trim().replace(/[^a-zA-Z0-9]/g, \" \").split(\" \")).reduce((a, b) => {\r\n        if(b.trim() !== \"\") {\r\n            a.push(b);\r\n        }\r\n        return a;\r\n    }, []).join(\"-\");\r\n}\r\n\r\nexport function enumerate(arr, and = false)  {\r\n    arr = [...arr];\r\n    if(arr.length > 1)  {\r\n        let lastIndex = arr.pop();\r\n        return `${arr.join(\", \")}, ${and ? \"and\" : \"or\"} ${lastIndex}`;  \r\n    } else  {\r\n        return arr[0];\r\n    }\r\n}\r\n\r\nexport function toCamelCase(str, url=false, initialCap=false)  {\r\n    let separator = url ? \"-\" : \" \";\r\n    return str.toLowerCase().split(`${separator}`).map((item, index) => index === 0 && !initialCap ? item : toCapitalize(item)).join(\"\");\r\n}\r\n\r\nexport function toNormalString(str, previousFormat = \"camel-case\")    {\r\n    if(previousFormat === \"camel-case\") {\r\n        str = str.replace(/([A-Z])/g, (char) => ` ${char.toUpperCase()}`);\r\n    } else if(previousFormat === \"underscored\") {\r\n        str = str.split(\"_\").map(item => toCapitalize(item)).join(\" \");\r\n    } else  {\r\n        str = str.split(\"-\").map(item => toCapitalize(item)).join(\" \");\r\n    }\r\n    return toCapitalize(str);\r\n}\r\n\r\nexport function toCapitalize(str) {\r\n    return str.split(\"\").map((char, index) =>  index === 0 ? char.toUpperCase() : char).join(\"\").trim();\r\n}\r\n\r\nexport function toCapitalizeAll(str)   {\r\n    return str.split(\" \").map(item => toCapitalize(item)).join(\" \");\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\n     ","import { toNormalString } from \"../string\";\r\n\r\n\r\nexport function getAllObjectKeys(objects) {\r\n    return objects.reduce((a, b) => {\r\n        for(let key of Object.keys(b))  {\r\n            if(!a.includes(key))    {\r\n                a.push(key);\r\n            }\r\n        }\r\n        return a;\r\n    }, []);\r\n}\r\n\r\nexport function sortObjectsByDate(arr)  {\r\n    arr.sort((a, b) => {\r\n        let date1 = new Date(a.releasedDate).getTime(),\r\n            date2 = new Date(a.releasedDate).getTime();\r\n        return date1 < date2 ? -1 : date1 > date2 ? 1 : 0; \r\n    })\r\n}\r\n\r\n\r\nexport function objectToString(object, delimiter=\", \") {\r\n    let output = [];\r\n    for(let key in object)  {\r\n        output.push(`${toNormalString(key)} : ${toNormalString(object[key]).toUpperCase()}`);\r\n    }\r\n    return output.join(delimiter);\r\n}\r\n\r\nexport function isObjectUnique(obj, objectsArray, keys=[])   {   \r\n    let overAllResults = []; \r\n    for(let object of objectsArray)  {\r\n        let results = [];\r\n        if(keys.length) {\r\n            for(let key of keys)    {\r\n                results.push(obj[key] !== object[key]);\r\n            }\r\n        } else  {\r\n            for(let key in obj) {\r\n                results.push(obj[key] !== object[key]);\r\n            }\r\n        }\r\n        \r\n        overAllResults.push(results.every(res => res));\r\n    }\r\n    return overAllResults.every(res => res);\r\n}\r\n\r\nexport function filterUnlistedObjects(localObjects, allObjects, keys=[])    {\r\n    return allObjects.filter(obj => isObjectUnique(obj, localObjects, keys));\r\n}\r\n\r\nexport function isObjectInArray(object, array = []) {\r\n    return array.some(item => {\r\n        let results = [];\r\n        for(let key in object)    {\r\n            results.push(object[key] === item[key]);\r\n        }\r\n        return results.every(res => res);\r\n    });\r\n}\r\n\r\nexport function sortArrayByObjectProp(arr, prop, asc = true)   {\r\n    return arr.sort((a, b) => {\r\n        if(!isNaN(Number(a[prop]))) {\r\n            return asc ? Number(a[prop]) - Number(b[prop]) : Number(b[prop]) - Number(a[prop]);\r\n        } else  {\r\n            if(asc) {\r\n                return a[prop] < b[prop] ? -1 : a[prop] > b[prop] ? 1 : 0; \r\n            } else  {\r\n                return a[prop] < b[prop] ? 1 : a[prop] > b[prop] ? -1 : 0;\r\n            }\r\n            \r\n        }\r\n    });\r\n}\r\n\r\nexport function getNestedObjectsArray({dataArray, relationalProp, uniqueProp, sortByProp = null, ascSortOrder = true})  {\r\n    \r\n    if(!dataArray.length)   {\r\n        return;\r\n    }\r\n\r\n    sortByProp = sortByProp ? sortByProp : Object.keys(dataArray[0]).includes(\"id\") ? \"id\" : Object.keys(dataArray[0])[0];\r\n\r\n    let sortedArray = [];\r\n    dataArray.forEach(item => item.children = []);\r\n\r\n\r\n    function recursiveNesting(dataArray, relationalProp, uniqueProp) {\r\n        let parentArray = [],\r\n            childrenArray = [];\r\n\r\n        dataArray.forEach(data => {\r\n            let children = dataArray.filter(item => data[uniqueProp] === item[relationalProp]),\r\n                parent = dataArray.find(item => data[relationalProp] === item[uniqueProp]);    \r\n            if(!children.length)    {\r\n                if(!parent) {\r\n                    sortedArray.push(data);\r\n                } else  {\r\n                    childrenArray.push(data);\r\n                }\r\n            } else{\r\n                parentArray.push(data);\r\n            }\r\n        });\r\n\r\n        parentArray = parentArray.map(parent => {\r\n            parent.children.push(...childrenArray.filter(child => child[relationalProp] === parent[uniqueProp]));\r\n            parent.children = sortArrayByObjectProp(parent.children, sortByProp, ascSortOrder);\r\n            return parent;\r\n        });\r\n\r\n        sortArrayByObjectProp(parentArray, sortByProp, ascSortOrder);\r\n\r\n        if(parentArray.length)  {\r\n            recursiveNesting(parentArray, relationalProp, uniqueProp, sortByProp, ascSortOrder);\r\n        }   \r\n    }\r\n    \r\n\r\n    recursiveNesting(dataArray, relationalProp, uniqueProp);\r\n\r\n    return sortArrayByObjectProp(sortedArray, sortByProp, ascSortOrder);\r\n    \r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n// config\r\nimport { baseUrl, fileUrl} from '../../config/';\r\n\r\n// utils\r\nimport { toCapitalize, toCapitalizeAll, toNormalString } from \"../../utilities/string/index\"\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array/index\";\r\n\r\n// hooks\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// css\r\nimport styles from \"./MuiTable.module.scss\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 770,\r\n    },\r\n});\r\n  \r\nexport default function StickyHeadTable({tableData, uniqueId, excludedColumns}) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\r\n    const {fileToken, authToken} = useAuth();\r\n\r\n    const rows = tableData;\r\n    const columns = Array.isArray(tableData) && tableData.length > 0 ? getAllObjectKeys(tableData).map(item => {\r\n        return {\r\n            id: item,\r\n            label: item === \"_id\" ? \"ID\" : item === \"imagePaths\" ? \"Images\" : toCapitalizeAll(toNormalString(item)),\r\n            align : 'center',\r\n            minWidth : 170,\r\n            maxWidth : 400,\r\n        }\r\n    }).filter(item => {\r\n        return !excludedColumns.includes(item.id);\r\n    }) : [];\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper className={`${classes.root}`}>\r\n        <TableContainer className={`${classes.container} ${styles[\"mui-table-container\"]}`}>\r\n            <Table stickyHeader aria-label=\"sticky table\" className={styles[\"mui-table\"]}>\r\n            <TableHead>\r\n                {columns.length > 0 && \r\n                <TableRow>\r\n                {columns.filter(column => column.id !== \"_id\").map((column) => (\r\n                    <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, color : \"#3a9eb5\" }}\r\n                    >\r\n                    {column.label}\r\n                    </TableCell>\r\n                ))}\r\n                </TableRow>\r\n                }   \r\n            </TableHead>\r\n            \r\n            <TableBody>\r\n                {rows.length > 0 && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[uniqueId]}>\r\n                        \r\n                    {columns.filter(column => column.id !== \"_id\").map((column) => {\r\n                        const value = row[column.id];\r\n\r\n                        if(column.id === \"imagePaths\")  {\r\n                            let imagePaths = value.map(item => item.trim());\r\n                            return  (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                    {imagePaths.map(item => {\r\n                                        return (\r\n                                            <img src={`${fileUrl}${fileToken}?filePath=${item}`} alt=\"\" />\r\n                                        );\r\n                                    })}\r\n                                </TableCell>\r\n                            );\r\n                        } else  {\r\n                            \r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                    {value}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n                    })}\r\n                    </TableRow>\r\n                );\r\n                })}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n        </Paper>\r\n    );\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\n\r\n// hooks\r\nimport useFetch from \"../../hooks/useFetch\"\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport ListAlt from '@material-ui/icons/ListAlt';\r\n\r\n\r\n// styles\r\nimport styles from \"./ManageScrapers.module.scss\";\r\n\r\n// url;\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array\";\r\n\r\n\r\n\r\nexport default function ManageScrapers({pageTitle}) {\r\n\r\n    let history = useHistory(),\r\n        {data : scrapers, isLoading : isLoadingTableData} = useFetch(\"/api/scrapers\"),\r\n        tableData = scrapers.map(item => {\r\n            const optionClickHandler = (value) => {\r\n                history.push(value);\r\n            }\r\n\r\n            return {\r\n                ...item, \r\n                // action : <DropdownButton size=\"small\" dropDownOptions={dropDownOptions} optionClickHandler={optionClickHandler} />\r\n                action : <div style={{display: \"flex\", justifyContent : \"space-evenly\"}}>\r\n                    <Button \r\n                        \r\n                        onClick={optionClickHandler.bind(null, `/manage-scrapers/run-script/${item._id}`)}\r\n                        startIcon={<PlayIcon />} \r\n                        style={{backgroundColor: \"#4fbf4f\", color : \"white\"}}\r\n                        size=\"small\">Run the Script</Button>  \r\n                    <Button \r\n                        onClick={optionClickHandler.bind(null, `/manage-scrapers/${item._id}`)}\r\n                        startIcon={<ListAlt />} \r\n                        size=\"small\" \r\n                        style={{backgroundColor: \"rgb(85 159 171)\", color : \"white\"}}>View Details</Button></div>\r\n            }\r\n        }),\r\n        includedKeys = [\"_id\", \"siteName\", \"productBrand\", \"groupIdentifierKey\", \"scraperType\", \"apiRoute\", \"action\", \"anotherAction\"],\r\n        excludedColumns = getAllObjectKeys(tableData).filter(key => !includedKeys.includes(key));\r\n        \r\n    \r\n    const createScraperButtonClickHandler = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/manage-scrapers/create-scraper/\");\r\n    }\r\n    \r\n\r\n    return  (\r\n        <>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            <EmptyCardFlex flexDirection=\"column\">\r\n                <Card>\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={createScraperButtonClickHandler} type=\"button\" variant=\"contained\" size=\"medium\" color=\"primary\" disableElevation startIcon={<Add />} >\r\n                            Create a new Scraper\r\n                        </Button>\r\n                    </div>\r\n                    {isLoadingTableData && \r\n                        <>\r\n                            <Divider style={{ margin : \"1.4rem 0\"}}></Divider>\r\n                            <Alert severity=\"info\"><CircularProgress style={{height: \"20px\", width: \"20px\"}}></CircularProgress> Loading the Scraper Script table</Alert>\r\n                        </>\r\n                    }\r\n                    {\r\n                        tableData.length > 0 && \r\n                        <>\r\n                            <Divider style={{ margin : \"1.4rem 0\"}}></Divider>\r\n                            <h6 className={styles[\"template-subtitle\"]}>These are the current available scripts</h6>\r\n                            <MuiTable tableData={tableData} uniqueId=\"_id\" excludedColumns={excludedColumns}></MuiTable>\r\n                        </>\r\n                    }    \r\n                </Card>\r\n            </EmptyCardFlex>  \r\n        </>\r\n    )\r\n\r\n}","import CodeEditor from '@uiw/react-textarea-code-editor';\r\n\r\nexport default function CodeEditor2({onChange, padding, value, style, placeholder, disabled}) {\r\n  \r\n    return (\r\n        <>\r\n        {!disabled && <CodeEditor\r\n            value={value}\r\n            language=\"js\"\r\n            placeholder={placeholder || \"You can now write some JS code...\"}\r\n            onChange={onChange}\r\n            padding={padding || 15}\r\n            \r\n            style={{\r\n                fontSize: 14,\r\n                backgroundColor: \"#f5f5f5\",\r\n                color : \"#333\",\r\n                fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\r\n                minHeight : \"500px\",\r\n                border : \"1px solid #dedede\",\r\n                ...style\r\n            }}\r\n        />}\r\n        {disabled && <CodeEditor\r\n            value={value}\r\n            language=\"js\"\r\n            placeholder={placeholder || \"You can now write some JS code...\"}\r\n            onChange={onChange}\r\n            padding={padding || 15}\r\n            disabled\r\n            style={{\r\n                fontSize: 14,\r\n                backgroundColor: \"#f5f5f5\",\r\n                color : \"#333\",\r\n                fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\r\n                minHeight : \"500px\",\r\n                border : \"1px solid #dedede\",\r\n                ...style\r\n            }}\r\n        />}\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport styles from \"./Select.module.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n    //   margin: theme.spacing(1),\r\n      minWidth: 250,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nexport default function Select2({label, options, uniqueProp, optionLabelProp, selectOnchangeHandler, defaultValue})    {\r\n    const classes = useStyles();\r\n    const [selectedOption, setSeletedOption] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        setSeletedOption(prev => e.target.value);\r\n        selectOnchangeHandler(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(defaultValue) {\r\n            setSeletedOption(defaultValue[uniqueProp]);\r\n        }\r\n    }, [defaultValue])\r\n\r\n    return (\r\n        <FormControl className={`${classes.formControl} ${styles.select}`}>\r\n            <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\r\n            <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selectedOption}\r\n            onChange={handleChange}\r\n            >   \r\n                {options.length > 0 && options.map(item => {\r\n                    return (\r\n                        <MenuItem key={item[uniqueProp]} value={item[uniqueProp]} selected>{item[optionLabelProp]}</MenuItem>\r\n                    )\r\n                })}\r\n                {options.length === 0 && options.map(item => {\r\n                    return (\r\n                        <MenuItem disabled key={item[uniqueProp]} value={item[uniqueProp]}>{item[optionLabelProp]}</MenuItem>\r\n                    )\r\n                })}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}","// core\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// styles\r\nimport styles from \"./SelectSiteResources.module.scss\";\r\nimport { Button } from '@material-ui/core';\r\nimport NavigateNext from '@material-ui/icons/NavigateNext';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n// components\r\nimport Select from \"../../components/Select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SelectSiteResource({selectOptions, selectedSiteResource, selectOnchangeHandler, setSelectHandler, createReadyHandler})    {\r\n\r\n    let [hasSelected, setHasSelected] = useState(false),\r\n        history = useHistory()\r\n\r\n\r\n    const selectButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        createReadyHandler();\r\n    };\r\n\r\n    const changeHandler = (value) =>   {\r\n        setHasSelected(prev => true);\r\n        selectOnchangeHandler(value);\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        history.push(\"/manage-scrapers\")\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(selectedSiteResource.siteName !== \"\")    {\r\n            setHasSelected(prev => true);\r\n        }\r\n    }, [selectedSiteResource]);\r\n\r\n    return (\r\n        <div className={styles[\"select-container\"]}>\r\n            <h6 className={styles[\"template-title\"]}>Select a Site Resource.</h6>\r\n            <div>\r\n                <Select defaultValue={selectedSiteResource} selectOnchangeHandler={changeHandler} label=\"Select a Site Resource\" options={selectOptions} uniqueProp=\"_id\" optionLabelProp=\"siteName\"></Select>\r\n                \r\n            </div>\r\n\r\n            {selectedSiteResource && selectedSiteResource.siteName !== \"\" && <div className={styles[\"site-resource-info-container\"]}>\r\n                <p>Site Name : {selectedSiteResource.siteName}</p>\r\n                <p>Site Url : {selectedSiteResource.siteUrl}</p>\r\n            </div>}\r\n\r\n            <div className={styles[\"buttons-container\"]}>\r\n                <Button onClick={cancelHandler} variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />}>Cancel</Button>\r\n                {!hasSelected && <Button  variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<NavigateNext />}>Use Selected Resource</Button>}\r\n                {hasSelected && <Button onClick={selectButtonHandler.bind(this)} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<NavigateNext />}>Use Selected Resource</Button>}\r\n                <Button onClick={setSelectHandler.bind(this, false)} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />}>Create a New Site Resource</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}   \r\n\r\n","import { useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// Components\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n// config\r\nimport { baseUrl } from \"../../config\";\r\n\r\n// styles\r\nimport styles from \"./CreateSiteResource.module.scss\";\r\n\r\n\r\nexport default function CreateSiteResource({siteResourceHandler, setSelectHandler, createReadyHandler}) {\r\n\r\n    let [siteResource, setSiteResource] = useState({siteName : \"\", siteUrl : \"\"}),\r\n        [message, setMessage] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [messageType, setMessageType] = useState(null),\r\n        { authToken } = useAuth(),\r\n        url = `${baseUrl}/api/site-resources`,\r\n        abortCont = new AbortController();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        let { siteName, siteUrl } = siteResource;\r\n        if((siteName.trim().length) && (siteUrl.trim().length)) {\r\n            setMessage(null);\r\n            setMessageType(null);\r\n            setIsLoading(true);\r\n\r\n            fetch(url, {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken\r\n                },\r\n                body : JSON.stringify(siteResource),\r\n                signal : abortCont.signal\r\n            })\r\n                .then(res => {\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    if(data.statusOk)   {\r\n                        setMessage('you have successfully saved the data');\r\n                        setMessageType(\"success\");\r\n                        siteResourceHandler(data.data);\r\n                        setTimeout(() => createReadyHandler(), 777);\r\n                    } else  {\r\n                        throw Error(`Data NOT SAVED : ${data.message}`);\r\n                    }\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setMessage(err.message);\r\n                        setMessageType(\"error\");\r\n                        setIsLoading(false);\r\n                    }\r\n                });\r\n        } else  {\r\n            setMessage(prev => \"Please make sure that the Site Name and Site URL fields are not empty.\");\r\n            setMessageType(prev => \"error\");\r\n        }\r\n\r\n        \r\n    }   \r\n\r\n\r\n    const changeHandler = (inputName, e) => {\r\n        setSiteResource(prev => ({...prev, [inputName] : e.target.value}));\r\n    }\r\n\r\n    return (\r\n        <div className={styles[\"form-container\"]}>\r\n            <h6 className={styles[\"template-title\"]}>Create a new Site Resource</h6>\r\n            <form onSubmit={submitHandler} className={styles.form} noValidate autoComplete=\"off\">\r\n                <div className={styles[\"input-container\"]}>\r\n                    <TextField onChange={changeHandler.bind(this, \"siteName\")} label=\"Site Name\" />\r\n                    <TextField onChange={changeHandler.bind(this, \"siteUrl\")} id=\"siteUrl\" label=\"Site URL\" />\r\n                </div>\r\n                \r\n                {true && \r\n                    <div className={styles[\"buttons-container\"]}>\r\n                    {!isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                        Save\r\n                    </Button>}\r\n                    {isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<SaveIcon />} >\r\n                        Saving...\r\n                    </Button>}\r\n                    {!isLoading && <Button onClick={setSelectHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                        Cancel\r\n                    </Button>}\r\n                    {isLoading && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Cancel />} >\r\n                        Cancel...\r\n                    </Button>}\r\n                    </div>\r\n                }\r\n            </form>\r\n            {message && \r\n                <>\r\n                {messageType === \"error\" && \r\n                    <p style={{color : \"red\"}}>{message}</p>\r\n                }\r\n                {messageType === \"success\" &&\r\n                    <p style={{color : \"green\"}}>{message}</p>\r\n                }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl } from '@material-ui/core';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport NextIcon from '@material-ui/icons/NavigateNext';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\n\r\n// styles\r\nimport styles from \"./CreateScraperData.module.scss\";\r\n\r\nexport default function CreateScraperData({currentValue, setScraperDataHandler, backButtonHandler, cancelHandler}) {\r\n\r\n    let [scraperDetails, setScraperDetails] = useState(currentValue),\r\n        [productBrandErrorMessage, setProductBrandErrorMessage] = useState(null),\r\n        [imagePropNameErrorMessage, setImagePropNameErrorMessage] = useState(null),\r\n        [uniqueSplitErrorMessage, setUniqueSplitErrorMessage] = useState(null),\r\n        [arrItemError, setArrItemError] = useState({}),\r\n        [arrItem, setArrItem] = useState({\r\n            splitItem : \"\",\r\n            sharedItem : \"\",\r\n            csvExcludedPropsItem : \"\",\r\n        });\r\n        // objectKeys = [getAllObjectKeys];\r\n\r\n\r\n    const submitHandler =(e) => {\r\n        e.preventDefault();\r\n        let { productBrand, imagePropName, imageNameObject } = scraperDetails;\r\n        if(productBrand && imagePropName && imageNameObject.split.length > 0)   {\r\n            setProductBrandErrorMessage(null);\r\n            setUniqueSplitErrorMessage(null);\r\n            setImagePropNameErrorMessage(null);\r\n\r\n            setScraperDataHandler(scraperDetails, true);\r\n        } else  {\r\n            setScraperDataHandler(scraperDetails, false);\r\n            let errors = [];\r\n            if(!productBrand)   {\r\n                setProductBrandErrorMessage(\"Product Brand is required.\");\r\n            }\r\n            if(!imagePropName)   {\r\n                setImagePropNameErrorMessage(\"Image Prop Name is required.\");\r\n            }\r\n            if(!imageNameObject.split.length)   {\r\n                setUniqueSplitErrorMessage(\"It is required to at least have a single Unique / Split Property.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeHandler = (prop, e) => {\r\n        setScraperDetails(prev => ({...prev, [prop] : e.target.value}));\r\n    }\r\n\r\n    const arrInputChangeHandler = (prop, e) => {\r\n        let keys = Object.keys(arrItemError),\r\n            key = keys.find(item => prop.includes(item));\r\n        setArrItemError(prev => {\r\n            let obj = {...prev};\r\n            obj[key] = null;\r\n            return obj;\r\n        })\r\n        setArrItem(prev => ({...prev, [prop] : e.target.value}));\r\n    }\r\n\r\n    const addItemToArrayInObjectHandler = (propName, arrName = null, e) => {\r\n        e.preventDefault();\r\n        let value;\r\n        if(arrName) {\r\n            value = arrItem[`${arrName}Item`];\r\n            if(value.trim() !== \"\") {\r\n                setArrItem(prev => ({...prev, [`${arrName}Item`] : \"\"}));\r\n            }\r\n            \r\n        } else  {\r\n            value = arrItem[`${propName}Item`];\r\n            if(value.trim() !== \"\") {\r\n                setArrItem(prev => ({...prev, [`${propName}Item`] : \"\"}));\r\n            }\r\n        }\r\n        if(value.trim() !== \"\") {\r\n            setScraperDetails(prev => {\r\n                if(value.trim().length) {\r\n                    if(arrName) {\r\n                        let arr = [...prev[propName][arrName]];\r\n                        if(!arr.includes(value))    {\r\n                            arr.push(value)\r\n                        } else  {\r\n                            setArrItemError(prev => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [arrName] : `We already have \"${value}\" in ${arrName} array of data.`\r\n                                };\r\n                            });\r\n                        }\r\n                        return {\r\n                            ...prev, \r\n                            [propName] : {\r\n                                ...prev[propName],\r\n                                [arrName] : arr\r\n                            }\r\n                        };\r\n                    } else  {\r\n                        let arr = [...prev[propName]];\r\n                        if(!arr.includes(value))    {\r\n                            arr.push(value)\r\n                        } else  {\r\n                            setArrItemError(prev => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [propName] : `We already have \"${value}\" in ${propName} array of data.`\r\n                                };\r\n                            });\r\n                        }\r\n                        return {\r\n                            ...prev, \r\n                            [propName] : arr,\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    const handleDeleteChipEntry = (propName, arrName = null, value, e) => {\r\n        e.preventDefault();\r\n        \r\n        setScraperDetails(prev => {\r\n            if(value.trim().length) {\r\n                if(arrName) {\r\n                    let arr = prev[propName][arrName].filter(item => item !== value);\r\n\r\n                    return {\r\n                        ...prev, \r\n                        [propName] : {\r\n                            ...prev[propName],\r\n                            [arrName] : arr\r\n                        }\r\n                    };\r\n                } else  {\r\n                    let arr = prev[propName].filter(item => item !== value);\r\n\r\n                    return {\r\n                        ...prev, \r\n                        [propName] : arr,\r\n                    };\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(arrItemError);\r\n    }, [arrItemError])\r\n\r\n    return (\r\n        <div className={`${styles[\"form-container\"]}`}>\r\n            <h6 className={styles[\"template-title\"]}>Create Scraper Details</h6>\r\n            <form className={styles.form} onSubmit={submitHandler}>\r\n                <div className={styles[\"input-container\"]}>\r\n                    <div className={styles[\"field-container\"]}>\r\n                        <FormControl fullWidth>\r\n                            <TextField value={scraperDetails.productBrand} onChange={changeHandler.bind(this, \"productBrand\")} label=\"Product Brand\" />\r\n                        </FormControl>\r\n                        {productBrandErrorMessage && <p className={styles[\"error-message\"]}>{productBrandErrorMessage}</p>}\r\n                    </div>\r\n                    <div className={styles[\"field-container\"]}>\r\n                        <FormControl fullWidth>\r\n                            <TextField value={scraperDetails.imagePropName} onChange={changeHandler.bind(this, \"imagePropName\")} label=\"Image Prop Name\" />\r\n                        </FormControl>\r\n                        {imagePropNameErrorMessage && <p className={styles[\"error-message\"]}>{imagePropNameErrorMessage}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : split */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Unique Properties of product to be used as part of the image name.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.imageNameObject.split.length > 0 && \r\n                            scraperDetails.imageNameObject.split.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"imageNameObject\", \"split\", item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField value={arrItem.splitItem} onChange={arrInputChangeHandler.bind(this, \"splitItem\")} fullWidth label=\"Unique / Split\"  />\r\n                            {uniqueSplitErrorMessage && <p className={styles[\"error-message\"]}>{uniqueSplitErrorMessage}</p>}\r\n                            {arrItemError.split !== null && <p className={styles[\"error-message\"]}>{arrItemError.split}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"imageNameObject\", \"split\")} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : shared */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Shared Properties of the product to be used as part of the image name.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.imageNameObject.shared.length > 0 && \r\n                            scraperDetails.imageNameObject.shared.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"imageNameObject\", \"shared\", item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField fullWidth value={arrItem.sharedItem} onChange={arrInputChangeHandler.bind(this, \"sharedItem\")} fullWidth label=\"Shared\" />\r\n                            {arrItemError.shared !== null && <p className={styles[\"error-message\"]}>{arrItemError.shared}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"imageNameObject\", \"shared\")} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : csv excluded props */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Excluded Properties when creating the CSV file.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.csvExcludedProps.length > 0 && \r\n                            scraperDetails.csvExcludedProps.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"csvExcludedProps\", null, item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField fullWidth value={arrItem.csvExcludedPropsItem} onChange={arrInputChangeHandler.bind(this, \"csvExcludedPropsItem\")} fullWidth label=\"CSV Excluded Props\" />\r\n                            {arrItemError.csvExcludedProps !== null && <p className={styles[\"error-message\"]}>{arrItemError.csvExcludedProps}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"csvExcludedProps\", null)} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles[\"message\"]}>\r\n\r\n                </div>\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n                \r\n            </form>            \r\n        </div>    \r\n    )\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({legend, radioOptions, onChange, defaultValue}) {\r\n  const [value, setValue] = React.useState(defaultValue || radioOptions[1].value);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{legend}</FormLabel>\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n            {\r\n                radioOptions.length  > 0 && radioOptions.map(item => {\r\n                    return (\r\n                        <FormControlLabel value={item.value} key={item.value} control={<Radio />} label={ item.label } />\r\n                    );\r\n                })\r\n            }\r\n        </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectUnique } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl } from '@material-ui/core';\r\nimport NextIcon from '@material-ui/icons/NavigateNext';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// styles \r\nimport styles from \"./CreateModelOptions.module.scss\";\r\n\r\nexport default function CreateModelSchema({currentValue, setModelObjectHandler, cancelHandler, backButtonHandler}) {\r\n\r\n    let selectOptions = [\r\n            { name : \"String\" },\r\n            { name : \"Array\" },\r\n        ],\r\n        radioOptions = [\r\n            { value : \"true\", label : \"True\" },\r\n            { value : \"false\", label : \"False\" },\r\n        ],\r\n        [modelObjectOptions, setModelObjectOptions] = useState(currentValue),\r\n        [saveButtonEnabled, setSavedButtonEnabled] = useState(false),\r\n        [schemaArray, setSchemaArray] = useState(Object.keys(modelObjectOptions.schema).map(propKey => {\r\n            return {key : propKey, ...modelObjectOptions.schema[propKey]}\r\n        })),\r\n        [addSchemaButtonDisabled, setAddSchemaButtonDisabled] = useState(true),\r\n        [schemaKey, setSchemaKey] = useState(null),\r\n        [schemaKeyType, setSchemaKeyType] = useState(\"String\"),\r\n        [schemaKeyRequired, setSchemaKeyRequired] = useState(\"false\"),\r\n        [schemaError, setSchemaError] = useState(null),\r\n\r\n\r\n        // model initialized props \r\n        [propObjectsErrMessage, setPropObjectsErrMessage] = useState({\r\n            friendlyUrlProps : null,\r\n            immutableProps : null,\r\n            uniqueProps : null,\r\n        }),\r\n        [propObjects, setPropObjects] = useState({\r\n            friendlyUrlProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\"))[\"friendlyUrlProps\"]] : [],\r\n            immutableProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\"))[\"immutableProps\"]] : [],\r\n            uniqueProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\"))[\"uniqueProps\"]] : [],\r\n        }),\r\n        [friendlyUrlProp, setFriendlyUrlProp] = useState(\"\"),\r\n        [immutableProp, setImmutableProp] = useState(\"\"),\r\n        [uniqueProp, setUniqueProp] = useState(\"\");\r\n\r\n    // model schema event handlers \r\n    const inputChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setSchemaKey(prev => e.target.value);\r\n        if(e.target.value.trim() !== \"\")    {\r\n            setAddSchemaButtonDisabled(prev => false);\r\n            setSchemaError(prev => false);\r\n        } else  {\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const selectOnchangeHandler = (value) => {\r\n        setSchemaKeyType(prev => value);\r\n    }\r\n\r\n    const radioChangeHandler = (value) => {\r\n        setSchemaKeyRequired(prev => value);\r\n    }\r\n\r\n    const addSchemaHandler = (e) => {\r\n        e.preventDefault();\r\n        if(schemaKey && schemaKey.length > 0) {\r\n\r\n            let schemaObject = {key : schemaKey, type : schemaKeyType, required : schemaKeyRequired};\r\n\r\n            if(isObjectUnique(schemaObject, schemaArray, [\"key\"])) {\r\n                setSchemaArray(prev => {                    \r\n                    let arr = [...prev, schemaObject];\r\n                    return arr;\r\n                });\r\n            } else  {\r\n                setSchemaError('We already have this schema...');\r\n            }\r\n            setSchemaKey(prev => \"\");\r\n            // setSchemaKeyType(prev => \"String\");\r\n            setSchemaKeyRequired(prev => \"false\");\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const deleteSchemaHandler = (key, e) => {\r\n        e.preventDefault();\r\n        setSchemaArray(prev => {\r\n            let arr = prev.slice().filter(item => item.key !== key);\r\n            return arr;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // initializedPropsHandler\r\n\r\n\r\n    const handleDeleteChipEntry = (propName, arrItem, e) => {\r\n        e.preventDefault();\r\n\r\n        setPropObjects(prev => {\r\n            let obj = {...prev},\r\n                arr = obj[propName].filter(item => item !== arrItem);\r\n            return {...obj, [propName] : arr};\r\n        });\r\n        \r\n    }   \r\n\r\n    const propObjectChangeHandler = (setter, propName, e) => {\r\n        setter(e.target.value);\r\n        setPropObjectsErrMessage(prev => {\r\n            return {...prev, [propName] : null};\r\n        })\r\n    }\r\n\r\n    const addPropObjects = (propName, value, setter, e) => {\r\n        e.preventDefault();\r\n\r\n        if(value.trim() !== \"\")    {\r\n            \r\n            if(!propObjects[propName].includes(value)) {\r\n                \r\n                setPropObjects(prev => {\r\n                    let obj = {...prev};\r\n                    obj[propName].push(value);\r\n                    return obj;\r\n                });\r\n            } else  {\r\n                setPropObjectsErrMessage(prev => {\r\n                    return {...prev, [propName] : `We already have \"${value}\" property name in ${propName}`}\r\n                });\r\n            }\r\n        }\r\n        setter(prev => \"\");\r\n    }\r\n\r\n\r\n\r\n    // submit handler\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setModelObjectOptions(prev => {\r\n            let obj = {...prev},\r\n                initializedProps = [];\r\n            \r\n            for(let key in propObjects) {\r\n                initializedProps.push({[key] : propObjects[key]});\r\n            }\r\n            \r\n            obj.schema = schemaArray.reduce((a, b) => {\r\n                    a[b.key] = {\r\n                        type : b.type,\r\n                        required : b.required,\r\n                    };\r\n\r\n                    return a;\r\n                }, {});\r\n\r\n            obj.initializedProps = initializedProps;\r\n            setModelObjectHandler(obj, true);\r\n            return obj;\r\n        });\r\n        \r\n    }  \r\n\r\n    useEffect(() => {\r\n        if(schemaArray.length)  {\r\n            setSavedButtonEnabled(prev => true);\r\n        } else  {\r\n            setSavedButtonEnabled(prev => false);\r\n        }\r\n    }, [schemaArray]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Model Options</h6>\r\n                        <div className={styles.form} >\r\n                        <h6 className={styles[\"template-section-title\"]}>Add DB Model Schema</h6>\r\n                            <div className={styles[\"input-container\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <FormControl fullWidth>\r\n                                        <TextField value={schemaKey} onChange={inputChangeHandler} label=\"Schema Property Name\" />\r\n                                        {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>}\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <Select defaultValue={selectOptions[0]} selectOnchangeHandler={selectOnchangeHandler} label=\"Shema Property Type\" options={selectOptions} uniqueProp=\"name\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <RadioButtonsGroup radioOptions={radioOptions} legend=\"Is Value Required?\" onChange={radioChangeHandler} />\r\n                                    </FormControl>\r\n                                    {!addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                    {addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disabled disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </Card>\r\n                {\r\n                    schemaArray.length > 0 && \r\n                    <Card className={styles[\"schema-container\"]}>\r\n                        <h6 className={styles[\"template-subtitle\"]}>Added Model Schemas</h6>\r\n                        <ul>\r\n                        {schemaArray.map(item => {\r\n                            let {key, type, required} = item;\r\n                            return (\r\n                                <li key={key}>\r\n                                    <span>Key : {key}</span>\r\n                                    <span>Type : {type}</span>\r\n                                    <span>Required : {required}</span>\r\n                                    \r\n                                    <IconButton onClick={deleteSchemaHandler.bind(this, key)} className={styles[\"delete-button\"]} color=\"default\"  component=\"span\">\r\n                                    <Cancel />\r\n                                    </IconButton>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        </ul>\r\n                    </Card>\r\n                }\r\n            </EmptyCardFlex>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                <div className={`${styles[\"form-container\"]}`}>\r\n                   \r\n                    <div className={styles.form}>\r\n                        <h6 className={styles[\"template-section-title\"]}>Set the Initialized Properties</h6>\r\n\r\n\r\n                        {/* Array containers : uniqueProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Unique Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.uniqueProps.length > 0 && \r\n                                    propObjects.uniqueProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${item}-${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"uniqueProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={uniqueProp} onChange={propObjectChangeHandler.bind(this, setUniqueProp, \"uniqueProps\")} fullWidth label=\"Unique Properties\" />\r\n                                    {propObjectsErrMessage.uniqueProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.uniqueProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : immutableProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n\r\n                            <p className={styles[\"description\"]}>Immutable Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.immutableProps.length > 0 && \r\n                                    propObjects.immutableProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${item}-${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"immutableProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={immutableProp} onChange={propObjectChangeHandler.bind(this, setImmutableProp, \"immutableProps\")} fullWidth label=\"Immutable Properties\" />\r\n                                    {propObjectsErrMessage.immutableProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.immutableProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : friendlyUrlProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Friendly URL Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.friendlyUrlProps.length > 0 && \r\n                                    propObjects.friendlyUrlProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${item}-${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"friendlyUrlProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={friendlyUrlProp} onChange={propObjectChangeHandler.bind(this, setFriendlyUrlProp, \"friendlyUrlProps\")} fullWidth label=\"Friendly URL Properties\" />\r\n                                    {propObjectsErrMessage.friendlyUrlProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.friendlyUrlProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>            \r\n                </div>    \r\n                </Card> \r\n                \r\n            </EmptyCardFlex>\r\n            <Card>\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                            Cancel\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    \r\n                    {saveButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>}\r\n                    {!saveButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>}\r\n                    \r\n                </div>\r\n            </Card>\r\n        </form>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectInArray } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl, Divider } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CodeEditor from \"../../components/CodeEditor/\";\r\n\r\n// styles\r\nimport styles from \"./CreateEvaluators.module.scss\";\r\nimport { toCamelCase } from \"../../utilities/string\";\r\n\r\nexport default function CreateEvaluators({currentValue, currentUsageValue, currentGroupIdentifierKeyValue, currentSchema, setEvaluatorObjectsHandler, setUsageHandler, setGroupIdentifierKeyHandler, cancelHandler, backButtonHandler})   {\r\n\r\n\r\n    let radioOptions = [\r\n            { value : \"list\", label : \"List\" },\r\n            { value : \"single\", label : \"Single\" },\r\n        ],\r\n        selectOptions = [\r\n            { name : \"True\", value : true },\r\n            { name : \"False\", value : false },\r\n        ],\r\n        [evaluatorObjects, setEvaluatorObjects] = useState(currentValue),\r\n        [submitButtonEnabled, setSubmitButtonEnabled] = useState(false),\r\n        [addEvaluatorButtonEnabled, setAddEvaluatorButtonEnabled] = useState(false),\r\n\r\n        [callback, setCallback] = useState(\"\"),\r\n        [type, setType] = useState(\"list\"),\r\n\r\n        // waitMethod\r\n        [waitMethods, setWaitMethods] = useState([\r\n            // {name : \"waitForSelector\", args : \".page-card-info .product-info\"},\r\n            // {name : \"waitForSelector\", args : \".page-image-container .product-image\"},\r\n        ]),\r\n        [currentWaitMethod, setCurrentWaitMethod] = useState({\r\n            name: \"\",\r\n            args : \"\",\r\n        }),\r\n        [addWaitMethodButtonReady, setAddWaitMethodButtonReady] = useState(false),\r\n        [waitMethodError, setWaitMethodError] = useState(null),\r\n\r\n            // shows if evaluator TYPE === list;\r\n            [showPaginated, setShowPaginated] = useState(true),\r\n            [paginated, setPaginated] = useState(false),\r\n            \r\n            // only needed if evaluator TYPE === single;\r\n            [objPropArgs, setObjPropArgs] = useState([]),\r\n            [objPropArgsError, setObjPropArgsError] = useState(null),\r\n            [currentPropArg, setCurrentPropArg] = useState(''),\r\n            [addObjPropArgsButtonEnabled, setAddObjPropArgsButtonEnabled] = useState(false),\r\n\r\n            // productUrlProp\r\n            [productUrlProp, setProductUrlProp] = useState(\"\"),\r\n            [productUrlPropError, setProductUrlPropError] = useState(false),\r\n\r\n        // devs comments\r\n        [usage, setUsage] = useState(currentUsageValue),\r\n\r\n        // groupIdentifierKey\r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(currentGroupIdentifierKeyValue);\r\n        \r\n\r\n\r\n    // callback event handler\r\n    const callbackTextFieldChangeHandler = (e) => {\r\n        setCallback(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // wait methods event handlers\r\n\r\n    const removeWaitMethodHandler = (item, e) => {\r\n        setWaitMethods(prev => {\r\n            let arr = prev.slice();\r\n            return [...arr.filter(method => method !== item)];\r\n        })\r\n    }\r\n\r\n    const waitMethodInputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        setWaitMethodError(prev => false);\r\n        setCurrentWaitMethod(prev => {\r\n            return {...prev, [propName] : e.target.value};\r\n        })\r\n    }\r\n\r\n    const addWaitMethodHandler = () => {\r\n        let waitMethod = {...currentWaitMethod};\r\n        if(!isObjectInArray(currentWaitMethod, waitMethods))    {\r\n            setWaitMethods(prev => { \r\n                return [...prev, waitMethod];\r\n            });\r\n        } else  {\r\n            setWaitMethodError(prev => `We already have this Wait Method in our list of methods.`);\r\n        }\r\n        setCurrentWaitMethod(prev => ({name : \"\", args : \"\"}));\r\n    }\r\n\r\n\r\n\r\n    // type events\r\n    const radioChangeHandler = (value) => {\r\n        setType(prev => value);\r\n        if(value === \"list\")    {\r\n            setShowPaginated(true);\r\n        } else  {\r\n            setShowPaginated(false);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // selectOnChangeHandler\r\n    const selectOnchangeHandler = (value) => {\r\n        setPaginated(prev => value);\r\n    }\r\n\r\n    // objPropArgs event handlers\r\n    const handleDeleteObjPropArgs = (value, e) => {\r\n        setObjPropArgs(prev => prev.filter(item => item !== value));\r\n    }\r\n\r\n    const propArgsInputChangeHandler = (e) => {\r\n        setCurrentPropArg(prev => e.target.value);\r\n        if(e.target.value !== \"\")   {\r\n            setObjPropArgsError(prev => null);\r\n            setAddObjPropArgsButtonEnabled(true);\r\n        } else  {\r\n            setAddObjPropArgsButtonEnabled(false);\r\n        }\r\n    }\r\n\r\n    const addButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setCurrentPropArg(prev => {\r\n\r\n            setObjPropArgs(prevState => {\r\n                if(prevState.includes(prev))    {\r\n                    setObjPropArgsError(prevState => `We already have \"${prev}\" in our Object Property Arguments list...`);\r\n                    return [...prevState];\r\n                } else  {\r\n                    return [...prevState, prev];\r\n                }\r\n            });\r\n            setAddObjPropArgsButtonEnabled(false);\r\n            return \"\";\r\n        });\r\n        \r\n    }\r\n\r\n    // productUrlProp event handler\r\n    const productUrlPropChangeHandler = (e) => {\r\n        setProductUrlPropError(null);\r\n        setProductUrlProp(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // usage\r\n    const usageInputChangeHandler = (e) => {\r\n        setUsage(prev => e.target.value);\r\n    }\r\n\r\n\r\n     // groupIdentifierKey event hander\r\n    const groupIdentifierKeyPropChangeHandler = (value) => {\r\n        setGroupIdentifierKey(prev => value);\r\n    }\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n    // addEvaluatorObject event handler\r\n    const addEvaluatorObjectHandler = (e) => {\r\n        e.preventDefault();\r\n        if(type === \"list\") {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                paginated,\r\n            }]);\r\n        } else  {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                objPropArgs,\r\n                productUrlProp,\r\n            }]);\r\n            \r\n        }\r\n        \r\n        setCallback(prev => \"\");\r\n        setWaitMethods(prev => []);\r\n        setPaginated(false);\r\n        setObjPropArgs(prev => []);\r\n        setProductUrlProp(prv => \"\");\r\n        setAddEvaluatorButtonEnabled(false);\r\n        \r\n        \r\n    }\r\n\r\n    const removeEvaluatorHandler = (item, e) => {\r\n        setEvaluatorObjects(prev => prev.filter(evaluator => evaluator !== item));\r\n    }\r\n\r\n    const checkEvaluatorReady = () => {\r\n        if(callback === \"\")   {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        if(type === \"single\" && productUrlProp.trim() === \"\")  {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        setAddEvaluatorButtonEnabled(true);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n     /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n    // submitHandler\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setUsageHandler(usage);\r\n        setEvaluatorObjectsHandler(evaluatorObjects, true);\r\n        // need to set error message for productUrlProp here\r\n        setGroupIdentifierKeyHandler(groupIdentifierKey)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAddWaitMethodButtonReady(prev => (currentWaitMethod.name.trim() !== \"\" && currentWaitMethod.args.trim() !== \"\"));\r\n        checkEvaluatorReady();\r\n        setEvaluatorObjectsHandler(evaluatorObjects, false);\r\n        if(evaluatorObjects.length) {\r\n            setSubmitButtonEnabled(true);\r\n        } else  {\r\n            setSubmitButtonEnabled(false);\r\n        }\r\n\r\n    }, [currentWaitMethod, callback, type, productUrlProp, evaluatorObjects]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n\r\n            <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n                {evaluatorObjects.length > 0 && \r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={styles[\"added-evaluator-container\"]}>\r\n                        <h6 className={styles[\"template-title\"]}>Added Evaluator Objects</h6>\r\n\r\n                        {evaluatorObjects.map((item, index) => {\r\n                            return (\r\n                                <div className={styles[\"added-evaluator-object-container\"]} key={index}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                            <FormControl>\r\n                                                {/* onChange, padding, value, style, placeholder */}\r\n                                                <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                            </FormControl>\r\n                                        </li>\r\n                                        {item.waitMethods.length > 0 && <li>\r\n                                            <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                            <ul>\r\n                                                {item.waitMethods.map((method, i) => {\r\n                                                    return (\r\n                                                        <li key={i}>\r\n                                                            <ul>\r\n                                                                <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    )\r\n                                                })}\r\n                                            </ul>\r\n                                            \r\n                                        </li>}\r\n                                        {\r\n                                            item.type === \"list\" && \r\n                                            <li>\r\n                                                <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                {item.paginated.toString()}\r\n                                            </li>\r\n                                        }\r\n                                        {\r\n                                            item.type !== \"list\" && \r\n                                            <>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                    {item.objPropArgs.join(\", \")}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                    {item.productUrlProp}\r\n                                                </li>\r\n                                            </>\r\n                                        }\r\n                                        \r\n                                    </ul>\r\n                                    <span className={styles[\"remove-button\"]}>\r\n                                        <IconButton onClick={removeEvaluatorHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <Cancel />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                        {usage && \r\n                            <>\r\n                                <p style={{color : \"#4f72a7\"}}>Developer's comment on usage : </p>\r\n                                <p style={{color  : \"#40bb46\", fontWeight : \"bold\"}}>{usage}</p>\r\n                            </>\r\n                        }\r\n                        {groupIdentifierKey && \r\n                            <>\r\n                                <p style={{color : \"#4f72a7\"}}>Product Group / Set Identifier KEY : </p>\r\n                                <p style={{color  : \"#40bb46\", fontWeight : \"bold\"}}>{groupIdentifierKey}</p>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </Card>}\r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Evaluator Objects</h6>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Write an Evaluator Function</h6>\r\n                            <FormControl>\r\n                                {/* onChange, padding, value, style, placeholder */}\r\n                                <CodeEditor onChange={callbackTextFieldChangeHandler} value={callback}></CodeEditor>\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n                            {/* // wait methods */}\r\n                            <div className={styles[\"wait-methods-container\"]}>\r\n                                \r\n                                {waitMethods.length > 0 &&\r\n                                     <>\r\n                                    <h6 className={styles[\"description\"]}>Added Wait Methods</h6>\r\n                                    <div className={styles[\"added-methods\"]}>\r\n                                        \r\n                                        <ul>\r\n                                            {waitMethods.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={`${index}-${item}`}>\r\n                                                        <ul>\r\n                                                            <li><span>Method Name : </span> {item.name}</li>\r\n                                                            <li><span>Method Args : </span> {item.args}</li>\r\n                                                        </ul>\r\n                                                        <span className={styles[\"cancel-button\"]}>\r\n                                                            <IconButton onClick={removeWaitMethodHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <Cancel />\r\n                                                            </IconButton>\r\n                                                        </span>\r\n                                                        \r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                        {waitMethodError && <p className={styles[\"error-message\"]}>{waitMethodError}</p>}\r\n                                    </div>\r\n                                    </>\r\n                                }\r\n\r\n                                <div className={styles[\"wait-method-input-container\"]}>\r\n                                    <div className={styles[\"input-container-array\"]}>\r\n                                        <p className={styles[\"description\"]}>Add Puppeteer Wait Methods</p>\r\n                                        <div className={styles[\"field-container\"]}>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"name\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Name\" \r\n                                                    value={currentWaitMethod.name}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"args\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Arguments\" \r\n                                                    value={currentWaitMethod.args}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className={styles[\"button-container\"]}>\r\n                                            {addWaitMethodButtonReady && \r\n                                            <Button \r\n                                                onClick={addWaitMethodHandler}\r\n                                                type=\"button\" \r\n                                                variant=\"contained\" \r\n                                                size=\"small\" \r\n                                                color=\"default\" \r\n                                                disableElevation \r\n                                                startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                            {!addWaitMethodButtonReady && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n\r\n                            {/* evaluator options */}\r\n                            <div className={styles[\"evaluator-options\"]}>\r\n                                <FormControl fullWidth>\r\n                                    <RadioButtonsGroup value={type} defaultValue={type} radioOptions={radioOptions} legend=\"Evalutator Type\" onChange={radioChangeHandler} />\r\n                                </FormControl>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                {showPaginated &&\r\n                                    <>\r\n                                    <FormControl fullWidth>\r\n                                        <p className={styles[\"description\"]}>Is the evaluator function meant to be used for paginated starting url?</p>\r\n                                        <Select selectOnchangeHandler={selectOnchangeHandler} label=\"Is Paginated?\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                    </>\r\n                                }\r\n                                {!showPaginated &&\r\n                                    <>\r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <p className={styles[\"description\"]}>Object Properties as function arguments</p>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    {objPropArgs.length > 0 && \r\n                                                        <>\r\n                                                            <div className={`${styles[\"result-container\"]} ${styles[\"chip-container\"]}`}>\r\n                                                \r\n                                                                {objPropArgs.length > 0 && \r\n                                                                    objPropArgs.map((item, index) => {\r\n                                                                        return (\r\n                                                                            <Chip\r\n                                                                                key={`${item}-${index}`}\r\n                                                                                label={item}\r\n                                                                                onDelete={handleDeleteObjPropArgs.bind(this, item)}\r\n                                                                                deleteIcon={<Cancel />}\r\n                                                                            />\r\n                                                                        );\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </>\r\n                                                    }\r\n                                                    <div>\r\n                                                        <TextField \r\n                                                            value={currentPropArg}\r\n                                                            onChange={propArgsInputChangeHandler}\r\n                                                            fullWidth \r\n                                                            label=\"Object Property Arguments\" />\r\n                                                        {objPropArgsError && <p className={styles[\"error-message\"]}>{objPropArgsError}</p>}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disableElevation \r\n                                                            onClick={addButtonHandler}\r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                        {!addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disabled\r\n                                                            disableElevation \r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        \r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    <TextField \r\n                                                        value={productUrlProp}\r\n                                                        onChange={productUrlPropChangeHandler}\r\n                                                        fullWidth \r\n                                                        label=\"Product URI Property\" />\r\n                                                        {productUrlPropError && <p className={styles[\"error-message\"]}>{productUrlPropError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                                        \r\n                                    </>\r\n                                }\r\n                                \r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                {addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                {!addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" disabled size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>This will be used to group the data into sets or maybe categories</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        <FormControl fullWidth>\r\n                                        <Select \r\n                                            selectOnchangeHandler={groupIdentifierKeyPropChangeHandler} \r\n                                            label=\"Product Group / Set Identifier Key\" \r\n                                            options={[{name : \" -- Select a Property Name -- \", value : \"\"}, ...Object.keys(currentSchema).map(item => {\r\n                                            return {\r\n                                                name : item, value : item,\r\n                                            }\r\n                                        })]} \r\n                                            uniqueProp=\"value\" \r\n                                            optionLabelProp=\"name\"\r\n                                            defaultValue={currentGroupIdentifierKeyValue}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>Developer's comments in terms of Script Usage.</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        \r\n                                        <TextField \r\n                                            value={usage}\r\n                                            multiline\r\n                                            onChange={usageInputChangeHandler}\r\n                                            fullWidth \r\n                                            label=\"Usage\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>      \r\n                    </div>  \r\n\r\n\r\n\r\n\r\n                    {/* // buttons */}\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                Cancel\r\n                        </Button>\r\n                        <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                            Back\r\n                        </Button>\r\n                        \r\n                        {submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        {!submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n                </Card>\r\n                {/* <Card className={styles[\"create-evaluator-card\"]}></Card> */}\r\n            </EmptyCardFlex>\r\n            {/* <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n                <Card>\r\n                \r\n                </Card>\r\n                <Card className={styles[\"create-evaluator-card\"]}></Card>\r\n            </EmptyCardFlex> */}\r\n        </form>    \r\n    )\r\n}","// core\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// hooks\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport CodeEditor from \"../../../components/CodeEditor/CodeEditor\";\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { Button, Divider, CircularProgress, FormControl } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n/***********************************************************\r\n * \r\n *    Necessary Components for Creating a Scraper Script\r\n * \r\n***********************************************************/\r\n    // creating site resource\r\n    import SelectSiteResource from \"../../../templates/SelectSiteResource/\";\r\n    import CreateSiteResource from \"../../../templates/CreateSiteResource/\";\r\n    // creating scraperDetails\r\n    import CreateScraperData from \"../../../templates/CreateScraperData/\";\r\n    // crating a model object;\r\n    import CreateModelOptions from \"../../../templates/CreateModelOptions\";\r\n    // creating evaluatorObjects;\r\n    import CreateEvaluators from \"../../../templates/CreateEvaluatos\";\r\n\r\n\r\n// styles\r\nimport styles from \"./CreateScraper.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config/\"; \r\nimport { toNormalString } from \"../../../utilities/string\";\r\n\r\nexport default function CreateScraper({pageTitle}) {\r\n\r\n    let {authToken} = useAuth(),\r\n        abortCont = new AbortController(),\r\n        history = useHistory(),\r\n\r\n        // siteResource object\r\n        [selectOn, setSelectOn] = useState(true),\r\n        [siteResource, setSiteResource] = useState({\r\n            _id : \"\",\r\n            siteName : \"\",\r\n            siteUrl : \"\",\r\n        }),\r\n        {data : selectOptions, setData : setSelectOptions} = useFetch(\"/api/site-resources\", {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"x-auth-token\" : authToken,\r\n                \"Content-type\" : \"application/json\",\r\n            }\r\n        }),\r\n        [siteResourceReady, setSiteResourceReady] = useState(false),\r\n\r\n        // scraperDbObject\r\n        [scraperDetails, setScraperDetails] = useState({\r\n            productBrand : \"\", \r\n            imagePropName : \"\", \r\n            imageNameObject : {\r\n                shared : [],\r\n                split : [],\r\n            },\r\n            csvExcludedProps : [\"imageUris\", \"imagePaths\"],\r\n        }),\r\n        [scraperDetailsReady, setScraperDetailsReady] = useState(false),\r\n\r\n\r\n        // model object;\r\n        [modelObjectOptions, setModelObjectOptions] = useState({\r\n            schema : {\r\n                imagePaths : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                },\r\n                imageUris : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                }\r\n            },\r\n            initializedProps : []\r\n        }),\r\n        [modelObjectOptionsReady, setModelObjectOptionsReady] = useState(false),\r\n\r\n\r\n        // route object;\r\n        [routeObjectOptions, setRouteObjectOptions] = useState({\r\n            recordName : \"\",\r\n            pluralized : false,\r\n        }),\r\n\r\n        \r\n        // evaluatorObjects\r\n        [evaluatorObjects, setEvaluatorObjects] = useState([]),\r\n        [evaluatorObjectsReady, setEvaluatorObjectsReady] = useState(false),\r\n\r\n        // usage\r\n        [usage, setUsage] = useState(\"\"),\r\n\r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(null),\r\n\r\n        [submitObject, setSubmitObject] = useState({\r\n            type : null,\r\n            message : null,\r\n            loading : false,\r\n        });\r\n    \r\n\r\n    \r\n    /************************************/\r\n    /************************************/\r\n        // Event Handlers\r\n    /************************************/\r\n    /************************************/\r\n\r\n\r\n    // site resource event handlers\r\n    const selectOnchangeHandler = (id) => {\r\n        setSiteResource(prev => {\r\n            return selectOptions.find(item => item._id === id);\r\n        });\r\n    }\r\n\r\n    const siteResourceHandler = (siteResource) => {\r\n        setSiteResource(prev => ({...siteResource}))\r\n        setSelectOptions(prev => [...prev, siteResource]);\r\n    }\r\n\r\n    const setSelectHandler = (state, e) => {\r\n        e.preventDefault();\r\n        if(!state)  setSiteResource(prev => (prev));\r\n        setSelectOn(prev => state);\r\n    }\r\n\r\n    const createReadyHandler = () => {\r\n        setSiteResourceReady(prev => true);\r\n    }\r\n\r\n\r\n    // scraper details event handler\r\n    const setScraperDataHandler = (scraperDetailsObj, boolState) => {\r\n        setScraperDetails(prev => ({...prev, ...scraperDetailsObj}));\r\n        setRouteObjectOptions(prev => {\r\n            return {\r\n                recordName : scraperDetailsObj.productBrand, \r\n                pluralized : false\r\n            };\r\n        });\r\n        setScraperDetailsReady(prev => boolState);\r\n    }\r\n\r\n    // set model Object event handler\r\n    const setModelObjectHandler = (modelObject, boolState) => {\r\n        setModelObjectOptions(prev => ({...prev, ...modelObject}));\r\n        setModelObjectOptionsReady(prev => boolState);\r\n    }\r\n\r\n\r\n\r\n    // set evaluatorObjects event handlers\r\n    const setEvaluatorObjectsHandler = (value, boolState) => {\r\n        setEvaluatorObjects(prev => [...value]);\r\n        setEvaluatorObjectsReady(prev => boolState);\r\n    }\r\n\r\n\r\n    // usage handler\r\n    const setUsageHandler = (value) => {\r\n        if(value.trim() !== \"\") {\r\n            setUsage(prev => value.trim());\r\n        }\r\n    }\r\n\r\n\r\n    // groupIdentifierKeyHandler\r\n    const setGroupIdentifierKeyHandler = (value) => {\r\n        \r\n        setGroupIdentifierKey(prev => value);\r\n  \r\n    }\r\n\r\n\r\n\r\n    // back button handler\r\n    const backButtonHandler = (setter) => {\r\n        setter(prev => false);\r\n\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : null,\r\n                loading : false,\r\n                type : null,\r\n            }\r\n        });\r\n    }\r\n\r\n    // cancel button handler\r\n    const cancelHandler = () => {\r\n        // siteResource\r\n        setSiteResource(prev => ({\r\n            _id : \"\",\r\n            siteName : \"\",\r\n            siteUrl : \"\",\r\n        }));\r\n        setSiteResourceReady(false);\r\n\r\n        // scraperDetails\r\n        setScraperDetails(prev => ({\r\n            productBrand : \"\", \r\n            imagePropName : \"\", \r\n            imageNameObject : {\r\n                shared : [],\r\n                split : [],\r\n            },\r\n            csvExcludedProps : [\"imageUris\", \"imagePaths\"],\r\n        }));\r\n        setScraperDetailsReady(false);\r\n\r\n        // modelObject\r\n        setModelObjectOptions(prev => ({\r\n            schema : {\r\n                imagePaths : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                },\r\n                imageUris : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                }\r\n            },\r\n            initializedProps : []\r\n        }));\r\n\r\n        // routeObjectOptions\r\n        setRouteObjectOptions(prev => ({\r\n            recordName : \"\",\r\n            pluralized : false,\r\n        }));\r\n\r\n        // evaluatorObjects = [];\r\n        setEvaluatorObjects(prev => []);\r\n        setUsage(prev => \"\");\r\n        setGroupIdentifierKey(prev => \"\");\r\n\r\n        //\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : null,\r\n                loading : false,\r\n                type : null,\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const saveScraperHandler = () => {\r\n\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : \"Saving the Scraper Script into our database...\",\r\n                loading : true,\r\n                type : \"info\",\r\n            }\r\n        });\r\n        console.log(\"yep...\");\r\n        fetch(`${baseUrl}/api/scrapers`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({\r\n                siteResource,\r\n                usage,\r\n                groupIdentifierKey,\r\n                ...scraperDetails,\r\n                modelObjectOptions,\r\n                routeObjectOptions,\r\n                evaluatorObjects,\r\n            }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let { statusOk } = data;\r\n                if(statusOk)    {\r\n                    \r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : \"We have successfully saved the scraper script data. You will be redirected to the page where you can run the script shortly.\",\r\n                            loading : false,\r\n                            type : \"success\",\r\n                        }\r\n                    });\r\n                    setTimeout(() => {\r\n                        \r\n                        history.push(`/manage-scrapers/run-script/${data.data._id}`);\r\n                    }, 3000);\r\n                    \r\n                } else  {\r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : \"Something went wrong with the process of saving the script... please check the scraper script details you have filled up...\",\r\n                            loading : false,\r\n                            type : \"warning\",\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setSubmitObject(prev => {\r\n                    return {\r\n                        ...prev, \r\n                        message : `Scraper Script was not saved : ${err.message}`,\r\n                        loading : false,\r\n                        type : \"error\",\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if(submitObject.type === \"success\") {\r\n\r\n        }\r\n\r\n\r\n    }, [submitObject]);\r\n\r\n    return  (\r\n        <>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            \r\n            { submitObject.message !== null && \r\n                <EmptyCardFlex style={{padding : \".7rem 0\"}}>\r\n                    <Alert severity={submitObject.type}>{submitObject.loading && <CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>}{submitObject.message}</Alert>\r\n                    {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n                    <Alert severity=\"warning\">This is a warning message!</Alert>\r\n                    \r\n                    <Alert severity=\"success\">This is a success message!</Alert> */}\r\n                </EmptyCardFlex>\r\n            }\r\n\r\n            <EmptyCardFlex >\r\n                <EmptyCardFlex className={styles[\"create-scraper-container\"]}>\r\n                    {  !siteResourceReady && \r\n                        <Card className={styles[\"site-resource-card\"]}> \r\n                            {selectOn && <SelectSiteResource \r\n                                selectOnchangeHandler={selectOnchangeHandler}\r\n                                selectedSiteResource={siteResource}\r\n                                selectOptions={selectOptions}\r\n                                setSelectHandler={setSelectHandler}\r\n                                createReadyHandler={createReadyHandler}\r\n                            />}\r\n\r\n                            {!selectOn && <CreateSiteResource siteResourceHandler={siteResourceHandler} createReadyHandler={createReadyHandler} setSelectHandler={setSelectHandler} />}\r\n                        </Card>\r\n                    }\r\n                    {\r\n                        siteResourceReady &&  !scraperDetailsReady && \r\n                        <Card className={styles[\"create-scraper-card\"]}> \r\n                            <CreateScraperData currentValue={scraperDetails} setScraperDataHandler={setScraperDataHandler} cancelHandler={cancelHandler} backButtonHandler={() => backButtonHandler(setSiteResourceReady)}  />\r\n                        </Card>\r\n                    }\r\n                    {  scraperDetailsReady && !modelObjectOptionsReady &&\r\n                        <CreateModelOptions currentValue={modelObjectOptions} setModelObjectHandler={setModelObjectHandler} cancelHandler={cancelHandler} backButtonHandler={() => backButtonHandler(setScraperDetailsReady)} />\r\n                    }\r\n                    {  modelObjectOptionsReady && !evaluatorObjectsReady &&\r\n                        <CreateEvaluators \r\n                            currentValue={evaluatorObjects} \r\n                            currentUsageValue={usage}\r\n                            currentGroupIdentifierKeyValue={groupIdentifierKey}\r\n                            currentSchema={modelObjectOptions.schema}\r\n                            setGroupIdentifierKeyHandler={setGroupIdentifierKeyHandler} \r\n                            setUsageHandler={setUsageHandler} \r\n                            setEvaluatorObjectsHandler={setEvaluatorObjectsHandler} \r\n                            cancelHandler={cancelHandler}\r\n                            backButtonHandler={() => backButtonHandler(setModelObjectOptionsReady)} />\r\n                    }\r\n\r\n\r\n\r\n                    {/* showing data to be submitted to the scraper API */}\r\n\r\n\r\n\r\n                    { siteResourceReady && !evaluatorObjectsReady &&\r\n                        <Card className={styles[\"json-data\"]}>\r\n                                {siteResourceReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Site Resource : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Name</span> : {siteResource.siteName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Url</span> : {siteResource.siteUrl}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {scraperDetailsReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Scraper Details : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                                    <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {modelObjectOptionsReady &&\r\n                                    <>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Model Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Schema</span> : \r\n                                                    <ul>\r\n                                                        {Object.keys(modelObjectOptions.schema).map(key => {\r\n                                                            return (\r\n                                                                <li key={key}><span className={styles[\"label\"]}>{toNormalString(key)}</span> : \r\n                                                                    <ul>\r\n                                                                        {Object.keys(modelObjectOptions.schema[key]).map(prop => {\r\n                                                                            return (\r\n                                                                                <li key={prop}><span className={styles[\"label\"]}>{toNormalString(prop)}</span> : {modelObjectOptions.schema[key][prop]}</li>\r\n                                                                            );\r\n                                                                        })}\r\n                                                                        {/* <li><span className={styles[\"label\"]}>Image Prop Name</span> : </li> */}\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                                <li><span className={styles[\"label\"]}>Initialized Props</span> : \r\n                                                    <ul>\r\n                                                        {modelObjectOptions.initializedProps.map(item => {\r\n                                                            return (\r\n                                                                <li key={item}><span className={styles[\"label\"]}>{toNormalString(Object.keys(item).join(\"\"))}</span> : {Object.values(item).join(\", \")}</li>\r\n                                                            );\r\n                                                        })}\r\n                                                    {/* <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li> */}\r\n                                                    </ul>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Route Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Record Name</span> : {routeObjectOptions.recordName}</li>      \r\n                                                <li><span className={styles[\"label\"]}>Pluralized</span> : {routeObjectOptions.pluralized.toString()}</li>      \r\n                                            </ul>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    evaluatorObjects && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Evaluator Objects : </p>\r\n                                        <ul>\r\n                                            {evaluatorObjects.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                                        <ul>\r\n                                                            <li>\r\n                                                                <span className={styles[\"label\"]}>Callback</span> :\r\n                                                                {item.callback}\r\n                                                            </li>\r\n                                                            {item.waitMethods.length > 0 && <li>\r\n                                                                <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                                <ul>\r\n                                                                    {item.waitMethods.map((method, i) => {\r\n                                                                        return (\r\n                                                                            <li key={i}>\r\n                                                                                <ul>\r\n                                                                                    <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                                    <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                                </ul>\r\n                                                                            </li>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </ul>\r\n                                                                \r\n                                                            </li>}\r\n                                                            {\r\n                                                                item.type === \"list\" && \r\n                                                                <li>\r\n                                                                    <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                                    {item.paginated.toString()}\r\n                                                                </li>\r\n                                                            }\r\n                                                            {\r\n                                                                item.type !== \"list\" && \r\n                                                                <>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                                        {item.objPropArgs.join(\", \")}\r\n                                                                    </li>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                                        {item.productUrlProp}\r\n                                                                    </li>\r\n                                                                </>\r\n                                                            }\r\n                                                            \r\n                                                        </ul>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {usage && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Usage</span> : {usage}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {groupIdentifierKey && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Product Group Identifier Key</span> : {groupIdentifierKey}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                \r\n                        </Card>\r\n                    }\r\n\r\n                </EmptyCardFlex>\r\n                \r\n                <EmptyCardFlex flexDirection=\"row\">\r\n                    { evaluatorObjectsReady &&\r\n                        <Card className={styles[\"json-data\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Please Review the Data before submitting</h6>\r\n                                {siteResourceReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Site Resource : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Name</span> : {siteResource.siteName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Url</span> : {siteResource.siteUrl}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {scraperDetailsReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Scraper Details : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                                    <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {modelObjectOptionsReady &&\r\n                                    <>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Model Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Schema</span> : \r\n                                                    <ul>\r\n                                                        {Object.keys(modelObjectOptions.schema).map(key => {\r\n                                                            return (\r\n                                                                <li key={key}><span className={styles[\"label\"]}>{toNormalString(key)}</span> : \r\n                                                                    <ul>\r\n                                                                        {Object.keys(modelObjectOptions.schema[key]).map(prop => {\r\n                                                                            return (\r\n                                                                                <li key={prop}><span className={styles[\"label\"]}>{toNormalString(prop)}</span> : {modelObjectOptions.schema[key][prop]}</li>\r\n                                                                            );\r\n                                                                        })}\r\n                                                                        {/* <li><span className={styles[\"label\"]}>Image Prop Name</span> : </li> */}\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                                <li><span className={styles[\"label\"]}>Initialized Props</span> : \r\n                                                    <ul>\r\n                                                        {modelObjectOptions.initializedProps.map(item => {\r\n                                                            return (\r\n                                                                <li key={item}><span className={styles[\"label\"]}>{toNormalString(Object.keys(item).join(\"\"))}</span> : {Object.values(item).join(\", \")}</li>\r\n                                                            );\r\n                                                        })}\r\n                                                    {/* <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li> */}\r\n                                                    </ul>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Route Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Record Name</span> : {routeObjectOptions.recordName}</li>      \r\n                                                <li><span className={styles[\"label\"]}>Pluralized</span> : {routeObjectOptions.pluralized.toString()}</li>      \r\n                                            </ul>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    evaluatorObjects && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Evaluator Objects : </p>\r\n                                        <ul>\r\n                                            {evaluatorObjects.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                                        <ul>\r\n                                                            <li>\r\n                                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                                                <FormControl>\r\n                                                                    {/* onChange, padding, value, style, placeholder */}\r\n                                                                    <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                                    {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                                                </FormControl>\r\n                                                            </li>\r\n                                                            {item.waitMethods.length > 0 && <li>\r\n                                                                <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                                <ul>\r\n                                                                    {item.waitMethods.map((method, i) => {\r\n                                                                        return (\r\n                                                                            <li key={i}>\r\n                                                                                <ul>\r\n                                                                                    <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                                    <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                                </ul>\r\n                                                                            </li>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </ul>\r\n                                                                \r\n                                                            </li>}\r\n                                                            {\r\n                                                                item.type === \"list\" && \r\n                                                                <li>\r\n                                                                    <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                                    {item.paginated.toString()}\r\n                                                                </li>\r\n                                                            }\r\n                                                            {\r\n                                                                item.type !== \"list\" && \r\n                                                                <>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                                        {item.objPropArgs.join(\", \")}\r\n                                                                    </li>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                                        {item.productUrlProp}\r\n                                                                    </li>\r\n                                                                </>\r\n                                                            }\r\n                                                            \r\n                                                        </ul>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {usage && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Usage</span> : {usage}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {groupIdentifierKey && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Product Key that identifies what group or set name the product belongs to : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Product Group Identifier Key</span> : {groupIdentifierKey}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            <div className={styles[\"buttons-container\"]}>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                        Cancel\r\n                                </Button>\r\n                                <Button type=\"button\" onClick={() => backButtonHandler(setEvaluatorObjectsReady)} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                                    Back\r\n                                </Button>\r\n                                \r\n                                {submitObject.loading && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={saveScraperHandler} disableElevation disabled startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />} >\r\n                                    Saving the Scraper Script\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && !submitObject.message && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<PublishIcon />} >\r\n                                    Save the Scraper Script\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && submitObject.type === \"success\" && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<Check />} >\r\n                                    Done.\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && submitObject.type !== null && submitObject.type !== \"success\" && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<CloseIcon />} >\r\n                                    Scraper was not saved...\r\n                                </Button>}\r\n                                \r\n                            </div>\r\n                        </Card>\r\n                    }\r\n                </EmptyCardFlex>\r\n            </EmptyCardFlex>  \r\n            \r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// custom hooks\r\nimport useFetch from \"../../../hooks/useFetch\";\r\n\r\n// Material UI Components && custom components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport { Button, TextField, FormControl, CircularProgress, Divider } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport MuiTable from \"../../../components/MuiTable\";\r\n\r\n// utils\r\nimport { toNormalString } from \"../../../utilities/string\";\r\n\r\n// config\r\nimport { baseUrl, socketUrl, fileUrl } from \"../../../config\";\r\n\r\n\r\n// styles\r\nimport styles from \"./RunScraperScript.module.scss\";\r\n\r\n\r\n\r\n\r\n// // socket.io\r\n// const socket = io(`${socketUrl}`);\r\n\r\n// socket.on(\"greet\", (arg) => {\r\n//     console.log(arg); // world\r\n// });\r\n\r\n\r\nexport default function RunScraperScript({pageTitle})  {\r\n\r\n    let {authToken, fileToken} = useAuth(),\r\n        history = useHistory(),\r\n        {id} = useParams(),\r\n        {data : scraperData, fetchMessage} = useFetch(`/api/scrapers/${id}`),\r\n        [siteName, setSiteName] = useState(\"\"),\r\n        [productBrand, setProductBrand] = useState(\"\"),\r\n        [siteUrl, setSiteUrl] = useState(\"\"),\r\n        [csvExcludedProps, setCsvExcludedProps] = useState(null), \r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(\"\"),\r\n        [evaluatorObjects, setEvaluatorObjects] = useState([]),\r\n        [apiRoute, setApiRoute] = useState(null),\r\n        [evaluatorIndexes, setEvaluatorIndexes] = useState([]),\r\n        [usage, setUsage] = useState(null),\r\n\r\n        // script id\r\n        [scriptId, setScriptId] = useState(null),\r\n\r\n        // requiredData from user\r\n        [productsListEvaluatorUris, setProductsListEvaluatorUris] = useState([]),\r\n        [groupIdentifier, setGroupIdentifier] = useState(null),\r\n        [evaluatorArgs, setEvaluatorArgs] = useState([]),\r\n\r\n        // script state\r\n        [scriptRunning, setScriptRunning] = useState(false),\r\n        [scrapingMessage, setScrapingMessage] = useState(null),\r\n        [scrapingStatus, setScrapingStatus] = useState(null),\r\n\r\n        // next action states // downloading and saving;\r\n        [downloadingZip, setDownloadingZip] = useState(false),\r\n        [savingToDb, setSavingToDb] = useState(false),\r\n        [savingDataMessage, setSavingDataMessage] = useState(null),\r\n        [savingDataStatus, setSavingDataStatus] = useState(null),\r\n\r\n\r\n\r\n\r\n        // scraped data;\r\n        [scrapedData, setScrapedData] = useState(null),\r\n        [unscrapedData, setUnscrapedData] = useState(null),\r\n        [submitEnabled, setSubmitEnabled] = useState(false);\r\n        \r\n\r\n    const groupIdentifierKeyChangeHandler = (e) => {\r\n        setGroupIdentifier(prev => e.target.value)\r\n    }\r\n\r\n    \r\n    const evaluatorUriChangeHandler = (propName, evaluatorObjectIndex, arrIndex, e) => {\r\n        e.preventDefault();\r\n        setProductsListEvaluatorUris(prev => {\r\n            let arr = [...prev];\r\n            arr[arrIndex] = {[propName] : e.target.value, evaluatorIndex : evaluatorObjectIndex};\r\n\r\n            return arr;\r\n        });\r\n    }\r\n\r\n\r\n    // bottom buttons event handlers        \r\n    const stopScriptHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(scriptId)    {\r\n            fetch(`${baseUrl}/api/script/kill-script-processes/${scriptId}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                body : JSON.stringify({scriptId})\r\n            })\r\n            .then(res => {\r\n                if(res.ok)  {\r\n                    return res.json()\r\n                } else  {\r\n                    throw Error(\"We couldn't reach the server\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                setScriptRunning(prev => false);\r\n                \r\n            })\r\n            .catch(err => {\r\n                setScriptRunning(prev => true);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(groupIdentifier !== null && groupIdentifier.trim() !== \"\")    {\r\n            setSubmitEnabled(true)\r\n        } else  {\r\n            setSubmitEnabled(false)\r\n        }\r\n\r\n        console.log(submitEnabled);\r\n    }, [productsListEvaluatorUris, groupIdentifier])\r\n\r\n    const clearScrapingStates = () => {\r\n        setScriptRunning(prev => false);\r\n        setScrapingMessage(prev => null);\r\n        setScrapingStatus(prev => null);\r\n    }\r\n\r\n\r\n    const runScraperScriptHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setScriptRunning(prev => true);\r\n        setScrapingMessage(prev => \"Currently running the script...\");\r\n        setScrapingStatus(prev => \"info\");\r\n\r\n        fetch(`${baseUrl}/api/script/create-script/${id}`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({groupIdentifier, productsListEvaluatorUris, evaluatorArgs})\r\n        })\r\n            .then(res => {\r\n                if(res.ok)  {\r\n                    return res.json()\r\n                } else  {\r\n                    throw Error(\"We couldn't reach the server\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                setScriptId(prev => data.scriptId);\r\n                setTimeout(() => {\r\n                    fetch(`${baseUrl}/api/script/execute-script/${data.scriptId}`, {\r\n                        method : \"POST\",\r\n                        headers : {\r\n                            \"Content-type\" : \"application/json\",\r\n                            \"x-auth-token\" : authToken,\r\n                        },\r\n                    })\r\n                        .then(res => {\r\n                            if(!res.ok)  {\r\n                               throw Error(\"We couldn't reach the server.\"); \r\n                            }\r\n                            return res.json();\r\n                        })\r\n                        .then(data => {\r\n                            setScriptRunning(prev => false);\r\n                            setScrapingStatus(\"success\");\r\n                            setScrapingMessage(`We have successfully scraped the ${productBrand} - ${groupIdentifier} from ${siteName}`)\r\n                            setScrapedData(data.data.scrapedProducts);\r\n                            setUnscrapedData(data.data.unscrapedData);\r\n                        })\r\n                        .catch(err => {\r\n                            setScriptRunning(prev => false);\r\n                            setScrapingMessage(err.message);\r\n                            setScrapingStatus(\"error\");\r\n\r\n                        });\r\n                }, 1500);\r\n                \r\n\r\n            })\r\n            .catch(err => {\r\n                setScriptRunning(prev => false);\r\n                setScrapingMessage(err.message);\r\n                setScrapingStatus(prev => \"error\");\r\n\r\n                // setTimeout(() => clearScrapingStates(), 3000);\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    // action button events handler\r\n\r\n    const downloadZipHandler = (e) => {\r\n        e.preventDefault();\r\n        setDownloadingZip(true);\r\n\r\n\r\n        fetch(`${baseUrl}/api/script/create-csv/${scriptId}`, {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                setDownloadingZip(false);\r\n\r\n                let {filePath} = data,\r\n                    downloadUrl = `${fileUrl}${fileToken}?filePath=${filePath}&qType=download`;\r\n                \r\n\r\n                let aElem = document.createElement(\"a\");\r\n                aElem.setAttribute(\"href\", downloadUrl);\r\n                aElem.setAttribute(\"download\", true);\r\n                aElem.setAttribute(\"target\", \"_blank\");\r\n                aElem.click();\r\n\r\n                aElem.remove();\r\n            })\r\n            .catch(err => {\r\n                setDownloadingZip(false);\r\n            });\r\n    }\r\n\r\n    const saveDataHandler = (e) => {\r\n        // /script/save-data/:scriptId\r\n        e.preventDefault();\r\n        // clearScrapingStates();\r\n        setSavingToDb(true);\r\n        setSavingDataMessage(\"Currently saving the data\");\r\n        setSavingDataStatus(\"info\");\r\n\r\n\r\n        fetch(`${baseUrl}/api/script/save-data/${scriptId}`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({apiRoute})\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                let {statusOk, message} = data;\r\n                if(!statusOk)   {\r\n                    throw Error(message);\r\n                }\r\n                setSavingDataMessage(message);\r\n                setSavingDataStatus(\"success\");\r\n\r\n                let subApiRoute = apiRoute.replace(\"/api\", \"\"),\r\n                    url = `/scraped-data${subApiRoute}/all?${groupIdentifierKey}=${groupIdentifier}`;\r\n\r\n                setTimeout(() => history.push(url), 3000);\r\n\r\n            })\r\n            .catch(err => {\r\n                setSavingDataMessage(err.message);\r\n                setSavingDataStatus(\"error\");\r\n            });\r\n    }\r\n \r\n\r\n\r\n\r\n    // useEffect\r\n\r\n    useEffect(() => {\r\n        if(scraperData._id)   {\r\n\r\n            // we set the scraper data into its own states\r\n            setEvaluatorIndexes(prev => {\r\n                return scraperData.evaluatorObjects.reduce((a, b, index) => {\r\n                    if(b.type === \"list\")   {\r\n                        a.push(index);\r\n                    }\r\n                    return a;\r\n                }, []);\r\n            });\r\n            \r\n            setSiteName(prev => scraperData.siteName);\r\n            setProductBrand(prev => scraperData.productBrand);\r\n            setSiteUrl(prev => scraperData.siteUrl);\r\n            setGroupIdentifierKey(prev => scraperData.groupIdentifierKey);\r\n            setEvaluatorObjects(prev => scraperData.evaluatorObjects);\r\n            setApiRoute(prev => scraperData.apiRoute);\r\n            setCsvExcludedProps(prev => scraperData.csvExcludedProps);\r\n            setUsage(prev => scraperData.usage);\r\n        }\r\n    }, [scraperData])\r\n\r\n    useEffect(() => {\r\n        setEvaluatorArgs(prev => {\r\n            return evaluatorIndexes.reduce((a, b) => {\r\n                a.push({evaluatorIndex : b, args : []});\r\n                return a;\r\n            }, []);\r\n        });\r\n\r\n    }, [evaluatorObjects, evaluatorIndexes]);\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [scriptRunning])\r\n    \r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            {/* <pre style={{wordBreak : \"break-word\"}}>\r\n                {JSON.stringify(scraperData, null, 4)}\r\n            </pre> */}\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            {scrapingMessage && !savingDataStatus && <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {scrapingStatus &&\r\n                    <Alert severity={scrapingStatus}>\r\n                        {scrapingStatus === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {scrapingMessage}\r\n                    </Alert>\r\n                }\r\n            </EmptyCardFlex>}\r\n\r\n\r\n            {savingDataStatus && \r\n                <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {savingDataStatus &&\r\n                    <Alert severity={savingDataStatus}>\r\n                        {savingDataStatus === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {savingDataMessage}\r\n                    </Alert>\r\n                }\r\n                </EmptyCardFlex>\r\n            }\r\n\r\n\r\n\r\n            { scriptRunning && \r\n                <Card>\r\n                    Show data here...\r\n                </Card>\r\n            }\r\n\r\n\r\n            {scrapingStatus === \"success\" && scrapedData &&\r\n\r\n                <Card>\r\n                    <h6 className={styles[\"section-title\"]}>Scraped Data : <span className={styles[\"highlighted\"]}>{productBrand}</span> - <span className={styles[\"highlighted-2\"]}>{groupIdentifier}</span></h6>\r\n\r\n                    <div className={styles[\"action-buttons-container\"]}>\r\n                        {!savingToDb &&\r\n                            <Button type=\"button\" onClick={saveDataHandler} variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<SaveIcon />} >\r\n                                Save to Database\r\n                            </Button>\r\n                        }\r\n                        {savingToDb &&\r\n                            <Button type=\"button\" onClick={saveDataHandler} variant=\"contained\" size=\"small\" disabled style={{}}color=\"secondary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />} >\r\n                                Saving Scraped Data into our database...\r\n                            </Button>\r\n                        }\r\n                        {!downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disableElevation startIcon={<DownloadIcon />}>\r\n                            Download CSV files and Images\r\n                        </Button>}\r\n\r\n                        {downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                            Downloading CSV files and Images\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n\r\n\r\n                    {scrapedData && <MuiTable tableData={scrapedData} uniqueId=\"_id\" excludedColumns={csvExcludedProps.filter(item => item !== \"imagePaths\")}></MuiTable>}\r\n                </Card>\r\n            } \r\n            {scrapingStatus === \"success\" && unscrapedData &&\r\n\r\n                <Card>\r\n                    <h6 className={styles[\"section-title\"]}>UNSCRAPED Data : <span className={styles[\"highlighted\"]}>{productBrand}</span> - <span className={styles[\"highligted-2\"]}>{groupIdentifier}</span></h6>\r\n                    {unscrapedData && <MuiTable tableData={unscrapedData} uniqueId=\"_id\" excludedColumns={csvExcludedProps.filter(item => item !== \"cardUri\")}></MuiTable>}\r\n                </Card>\r\n            }\r\n\r\n\r\n            <Card>\r\n                {scraperData._id && <h5 className={styles[\"template-title\"]}>Start scraping <span className={styles[\"highlighted\"]}>{productBrand}</span> data from {siteName}</h5>}\r\n                {!scraperData._id && <h5 className={styles[\"template-title\"]}>{fetchMessage}</h5>}\r\n                {usage && \r\n                <Alert severity=\"info\" className={styles[\"usage\"]}>\r\n                    <h6 className={styles[\"section-title\"]}>Usage</h6>\r\n                    <p>{usage}</p>\r\n                </Alert>}\r\n                \r\n                <div className={styles[\"field-container\"]}>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        {  !scriptRunning && \r\n                            <FormControl fullWidth>\r\n                                <TextField value={groupIdentifier} onChange={groupIdentifierKeyChangeHandler} label={toNormalString(groupIdentifierKey)} />\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n                        }\r\n\r\n                        {\r\n                            scriptRunning && \r\n                            <FormControl fullWidth>\r\n                                <TextField value={groupIdentifier} disabled onChange={groupIdentifierKeyChangeHandler} label={toNormalString(groupIdentifierKey)} />\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n                        }\r\n\r\n                    </div>\r\n                    \r\n                    {evaluatorIndexes.length > 0 && \r\n                        evaluatorIndexes.map((item, i) => {\r\n                            return (\r\n                                <div className={styles[\"input-container\"]}>\r\n                                    {!scriptRunning &&\r\n                                        <FormControl fullWidth key={item}>\r\n                                            <TextField onChange={evaluatorUriChangeHandler.bind(this, \"url\", item, i)} label={`Starting Poin URL`} />\r\n                                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                        </FormControl>\r\n                                    }\r\n\r\n                                    {\r\n                                        scriptRunning && \r\n                                        <FormControl fullWidth key={item}>\r\n                                            <TextField disabled onChange={evaluatorUriChangeHandler.bind(this, \"url\", item, i)} label={`Starting Poin URL`} />\r\n                                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                        </FormControl>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                        \r\n                    }\r\n                </div>\r\n\r\n                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                {scraperData._id && <div className={styles[\"buttons-container\"]}>\r\n                    \r\n                    {scriptRunning && <Button type=\"button\" disabled variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>}\r\n                    {!scriptRunning && <Button type=\"button\" variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>}\r\n\r\n\r\n                    {/* Currently disabled as we don't have a way to stop the process... */}\r\n\r\n                    {/* {scriptRunning && <Button onClick={stopScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<StopIcon />}>\r\n                        Stop Scraping Process\r\n                    </Button>}\r\n\r\n                    {!scriptRunning && <Button onClick={stopScriptHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" disableElevation startIcon={<StopIcon />}>\r\n                        Stop Scraping Process\r\n                    </Button>} */}\r\n                    \r\n                    {/* <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disableElevation disabled startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />} >\r\n                        Saving the Scraper Script\r\n                    </Button> */}\r\n                    {!scriptRunning && submitEnabled &&  <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disableElevation startIcon={<PlayIcon />} style={{color : \"white\", backgroundColor : \"green\"}}>\r\n                        Run the script\r\n                    </Button>}\r\n\r\n                    {!scriptRunning && !submitEnabled &&  <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                        Run the script\r\n                    </Button>}\r\n\r\n                    {scriptRunning && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                        Executing the Script...\r\n                    </Button>}\r\n                </div>}\r\n\r\n                {!scraperData._id && \r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button type=\"button\" disabled variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    {!scriptRunning && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                        Run the script\r\n                    </Button>}\r\n                    \r\n                </div>\r\n                }\r\n            </Card>\r\n            \r\n        </EmptyCardFlex>   \r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectInArray } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl, Divider, CircularProgress } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CodeEditor from \"../../components/CodeEditor/\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// styles\r\nimport styles from \"./EditEvaluators.module.scss\";\r\nimport { toCamelCase } from \"../../utilities/string\";\r\n\r\nexport default function EditEvaluators({currentValue, setEvaluatorObjectsHandler, cancelHandler})   {\r\n\r\n    let radioOptions = [\r\n            { value : \"list\", label : \"List\" },\r\n            { value : \"single\", label : \"Single\" },\r\n        ],\r\n        selectOptions = [\r\n            { name : \"True\", value : true },\r\n            { name : \"False\", value : false },\r\n        ],\r\n        [evaluatorObjects, setEvaluatorObjects] = useState(currentValue),\r\n        [submitButtonEnabled, setSubmitButtonEnabled] = useState(false),\r\n        [addEvaluatorButtonEnabled, setAddEvaluatorButtonEnabled] = useState(false),\r\n        \r\n\r\n        [callback, setCallback] = useState(\"\"),\r\n        [type, setType] = useState(\"list\"),\r\n\r\n        // waitMethod\r\n        [waitMethods, setWaitMethods] = useState([\r\n            // {name : \"waitForSelector\", args : \".page-card-info .product-info\"},\r\n            // {name : \"waitForSelector\", args : \".page-image-container .product-image\"},\r\n        ]),\r\n        [currentWaitMethod, setCurrentWaitMethod] = useState({\r\n            name: \"\",\r\n            args : \"\",\r\n        }),\r\n        [addWaitMethodButtonReady, setAddWaitMethodButtonReady] = useState(false),\r\n        [waitMethodError, setWaitMethodError] = useState(null),\r\n\r\n            // shows if evaluator TYPE === list;\r\n            [showPaginated, setShowPaginated] = useState(true),\r\n            [paginated, setPaginated] = useState(false),\r\n            \r\n            // only needed if evaluator TYPE === single;\r\n            [objPropArgs, setObjPropArgs] = useState([]),\r\n            [objPropArgsError, setObjPropArgsError] = useState(null),\r\n            [currentPropArg, setCurrentPropArg] = useState(''),\r\n            [addObjPropArgsButtonEnabled, setAddObjPropArgsButtonEnabled] = useState(false),\r\n\r\n            // productUrlProp\r\n            [productUrlProp, setProductUrlProp] = useState(\"\"),\r\n            [productUrlPropError, setProductUrlPropError] = useState(false),\r\n\r\n\r\n\r\n        // Ajax status;\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null);\r\n\r\n        \r\n\r\n\r\n    // callback event handler\r\n    const callbackTextFieldChangeHandler = (e) => {\r\n        setCallback(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // wait methods event handlers\r\n\r\n    const removeWaitMethodHandler = (item, e) => {\r\n        setWaitMethods(prev => {\r\n            let arr = prev.slice();\r\n            return [...arr.filter(method => method !== item)];\r\n        })\r\n    }\r\n\r\n    const waitMethodInputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        setWaitMethodError(prev => false);\r\n        setCurrentWaitMethod(prev => {\r\n            return {...prev, [propName] : e.target.value};\r\n        })\r\n    }\r\n\r\n    const addWaitMethodHandler = () => {\r\n        let waitMethod = {...currentWaitMethod};\r\n        if(!isObjectInArray(currentWaitMethod, waitMethods))    {\r\n            setWaitMethods(prev => { \r\n                return [...prev, waitMethod];\r\n            });\r\n        } else  {\r\n            setWaitMethodError(prev => `We already have this Wait Method in our list of methods.`);\r\n        }\r\n        setCurrentWaitMethod(prev => ({name : \"\", args : \"\"}));\r\n    }\r\n\r\n\r\n\r\n    // type events\r\n    const radioChangeHandler = (value) => {\r\n        setType(prev => value);\r\n        if(value === \"list\")    {\r\n            setShowPaginated(true);\r\n        } else  {\r\n            setShowPaginated(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // selectOnChangeHandler\r\n    const selectOnchangeHandler = (value) => {\r\n        setPaginated(prev => value);\r\n    }\r\n\r\n    // objPropArgs event handlers\r\n    const handleDeleteObjPropArgs = (value, e) => {\r\n        setObjPropArgs(prev => prev.filter(item => item !== value));\r\n    }\r\n\r\n    const propArgsInputChangeHandler = (e) => {\r\n        setCurrentPropArg(prev => e.target.value);\r\n        if(e.target.value !== \"\")   {\r\n            setObjPropArgsError(prev => null);\r\n            setAddObjPropArgsButtonEnabled(true);\r\n        } else  {\r\n            setAddObjPropArgsButtonEnabled(false);\r\n        }\r\n    }\r\n\r\n    const addButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setCurrentPropArg(prev => {\r\n\r\n            setObjPropArgs(prevState => {\r\n                if(prevState.includes(prev))    {\r\n                    setObjPropArgsError(prevState => `We already have \"${prev}\" in our Object Property Arguments list...`);\r\n                    return [...prevState];\r\n                } else  {\r\n                    return [...prevState, prev];\r\n                }\r\n            });\r\n            setAddObjPropArgsButtonEnabled(false);\r\n            return \"\";\r\n        });\r\n        \r\n    }\r\n\r\n    // productUrlProp event handler\r\n    const productUrlPropChangeHandler = (e) => {\r\n        setProductUrlPropError(null);\r\n        setProductUrlProp(prev => e.target.value);\r\n    }\r\n\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n    // addEvaluatorObject event handler\r\n    const addEvaluatorObjectHandler = (e) => {\r\n        e.preventDefault();\r\n        if(type === \"list\") {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                paginated,\r\n            }]);\r\n        } else  {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                objPropArgs,\r\n                productUrlProp,\r\n            }]);\r\n            \r\n        }\r\n        \r\n        setCallback(prev => \"\");\r\n        setWaitMethods(prev => []);\r\n        setPaginated(false);\r\n        setObjPropArgs(prev => []);\r\n        setProductUrlProp(prv => \"\");\r\n        setAddEvaluatorButtonEnabled(false);\r\n        \r\n        \r\n    }\r\n\r\n    const removeEvaluatorHandler = (item, e) => {\r\n        setEvaluatorObjects(prev => prev.filter(evaluator => evaluator !== item));\r\n    }\r\n\r\n    const checkEvaluatorReady = () => {\r\n        if(callback === \"\")   {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        if(type === \"single\" && productUrlProp.trim() === \"\")  {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        setAddEvaluatorButtonEnabled(true);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n    // submitHandler\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setEvaluatorObjectsHandler(evaluatorObjects, false, setIsLoading, setMessage, setStatus);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAddWaitMethodButtonReady(prev => (currentWaitMethod.name.trim() !== \"\" && currentWaitMethod.args.trim() !== \"\"));\r\n        checkEvaluatorReady();\r\n        if(evaluatorObjects.length) {\r\n            setSubmitButtonEnabled(true);\r\n        } else  {\r\n            setSubmitButtonEnabled(false);\r\n        }\r\n\r\n    }, [currentWaitMethod, callback, type, productUrlProp, evaluatorObjects]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n\r\n            <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n\r\n\r\n                { message && \r\n                    <EmptyCardFlex style={{padding : \".7rem 0\"}}>\r\n                        <Alert severity={status}>{isLoading && <CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>}{message}</Alert>\r\n                        {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n                        <Alert severity=\"warning\">This is a warning message!</Alert>\r\n                        \r\n                        <Alert severity=\"success\">This is a success message!</Alert> */}\r\n                    </EmptyCardFlex>\r\n                }\r\n\r\n\r\n                {evaluatorObjects.length > 0 && \r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={styles[\"added-evaluator-container\"]}>\r\n                        <h6 className={styles[\"template-title\"]}>Current Evaluator Objects</h6>\r\n\r\n                        {evaluatorObjects.map((item, index) => {\r\n                            return (\r\n                                <div className={styles[\"added-evaluator-object-container\"]} key={index}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                            <FormControl>\r\n                                                {/* onChange, padding, value, style, placeholder */}\r\n                                                <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                            </FormControl>\r\n                                        </li>\r\n                                        {item.waitMethods.length > 0 && <li>\r\n                                            <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                            <ul>\r\n                                                {item.waitMethods.map((method, i) => {\r\n                                                    return (\r\n                                                        <li key={i}>\r\n                                                            <ul>\r\n                                                                <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    )\r\n                                                })}\r\n                                            </ul>\r\n                                            \r\n                                        </li>}\r\n                                        {\r\n                                            item.type === \"list\" && \r\n                                            <li>\r\n                                                <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                {item.paginated.toString()}\r\n                                            </li>\r\n                                        }\r\n                                        {\r\n                                            item.type !== \"list\" && \r\n                                            <>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                    {item.objPropArgs.join(\", \")}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                    {item.productUrlProp}\r\n                                                </li>\r\n                                            </>\r\n                                        }\r\n                                        \r\n                                    </ul>\r\n                                    <span className={styles[\"remove-button\"]}>\r\n                                        <IconButton onClick={removeEvaluatorHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <Cancel />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </Card>}\r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Evaluator Objects</h6>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Write an Evaluator Function</h6>\r\n                            <FormControl>\r\n                                {/* onChange, padding, value, style, placeholder */}\r\n                                <CodeEditor onChange={callbackTextFieldChangeHandler} value={callback}></CodeEditor>\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n                            {/* // wait methods */}\r\n                            <div className={styles[\"wait-methods-container\"]}>\r\n                                \r\n                                {waitMethods.length > 0 &&\r\n                                    <>\r\n                                    <h6 className={styles[\"description\"]}>Added Wait Methods</h6>\r\n                                    <div className={styles[\"added-methods\"]}>\r\n                                        \r\n                                        <ul>\r\n                                            {waitMethods.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={`${index}-${item}`}>\r\n                                                        <ul>\r\n                                                            <li><span>Method Name : </span> {item.name}</li>\r\n                                                            <li><span>Method Args : </span> {item.args}</li>\r\n                                                        </ul>\r\n                                                        <span className={styles[\"cancel-button\"]}>\r\n                                                            <IconButton onClick={removeWaitMethodHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <Cancel />\r\n                                                            </IconButton>\r\n                                                        </span>\r\n                                                        \r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                        {waitMethodError && <p className={styles[\"error-message\"]}>{waitMethodError}</p>}\r\n                                    </div>\r\n                                    </>\r\n                                }\r\n\r\n                                <div className={styles[\"wait-method-input-container\"]}>\r\n                                    <div className={styles[\"input-container-array\"]}>\r\n                                        <p className={styles[\"description\"]}>Add Puppeteer Wait Methods</p>\r\n                                        <div className={styles[\"field-container\"]}>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"name\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Name\" \r\n                                                    value={currentWaitMethod.name}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"args\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Arguments\" \r\n                                                    value={currentWaitMethod.args}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className={styles[\"button-container\"]}>\r\n                                            {addWaitMethodButtonReady && \r\n                                            <Button \r\n                                                onClick={addWaitMethodHandler}\r\n                                                type=\"button\" \r\n                                                variant=\"contained\" \r\n                                                size=\"small\" \r\n                                                color=\"default\" \r\n                                                disableElevation \r\n                                                startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                            {!addWaitMethodButtonReady && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n\r\n                            {/* evaluator options */}\r\n                            <div className={styles[\"evaluator-options\"]}>\r\n                                <FormControl fullWidth>\r\n                                    <RadioButtonsGroup value={type} defaultValue={type} radioOptions={radioOptions} legend=\"Evalutator Type\" onChange={radioChangeHandler} />\r\n                                </FormControl>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                {showPaginated &&\r\n                                    <>\r\n                                    <FormControl fullWidth>\r\n                                        <p className={styles[\"description\"]}>Is the evaluator function meant to be used for paginated starting url?</p>\r\n                                        <Select selectOnchangeHandler={selectOnchangeHandler} label=\"Is Paginated?\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                    </>\r\n                                }\r\n                                {!showPaginated &&\r\n                                    <>\r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <p className={styles[\"description\"]}>Object Properties as function arguments</p>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    {objPropArgs.length > 0 && \r\n                                                        <>\r\n                                                            <div className={`${styles[\"result-container\"]} ${styles[\"chip-container\"]}`}>\r\n                                                \r\n                                                                {objPropArgs.length > 0 && \r\n                                                                    objPropArgs.map((item, index) => {\r\n                                                                        return (\r\n                                                                            <Chip\r\n                                                                                key={`${item}-${index}`}\r\n                                                                                label={item}\r\n                                                                                onDelete={handleDeleteObjPropArgs.bind(this, item)}\r\n                                                                                deleteIcon={<Cancel />}\r\n                                                                            />\r\n                                                                        );\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </>\r\n                                                    }\r\n                                                    <div>\r\n                                                        <TextField \r\n                                                            value={currentPropArg}\r\n                                                            onChange={propArgsInputChangeHandler}\r\n                                                            fullWidth \r\n                                                            label=\"Object Property Arguments\" />\r\n                                                        {objPropArgsError && <p className={styles[\"error-message\"]}>{objPropArgsError}</p>}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disableElevation \r\n                                                            onClick={addButtonHandler}\r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                        {!addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disabled\r\n                                                            disableElevation \r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        \r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    <TextField \r\n                                                        value={productUrlProp}\r\n                                                        onChange={productUrlPropChangeHandler}\r\n                                                        fullWidth \r\n                                                        label=\"Product URI Property\" />\r\n                                                        {productUrlPropError && <p className={styles[\"error-message\"]}>{productUrlPropError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                                        \r\n                                    </>\r\n                                }\r\n                                \r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                {addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                {!addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" disabled size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n\r\n\r\n\r\n                    {/* // buttons */}\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                Cancel\r\n                        </Button>\r\n                        \r\n                        {submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        {!submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n                </Card>\r\n            </EmptyCardFlex>\r\n        </form>    \r\n    )\r\n\r\n\r\n}","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n\r\n// components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport EditEvaluators from \"../../../templates/EditEvaluators\";\r\nimport { Button, Divider, CircularProgress, Modal, FormControl } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Check from '@material-ui/icons/Check';\r\nimport CodeEditor from \"../../../components/CodeEditor/\";\r\n\r\n\r\nimport styles from \"./ScraperDetails.module.scss\";\r\n\r\n\r\nexport default function ScraperDetails({pageTitle})  {\r\n\r\n    let { authToken } = useAuth(),\r\n        { id } = useParams(),\r\n        {data : scraperDetails, setData : setScraperDetails} = useFetch(`/api/scrapers/${id}`, {}, null),\r\n        history = useHistory(),\r\n        [modalOpen, setModalOpen] = useState(false),\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n\r\n        // edit evaluator functions\r\n        [editingEvaluatorObjects, setEditingEvaluatorObjects] = useState(false);\r\n        \r\n\r\n    const executeScriptHandler = () => {\r\n        history.push(`/manage-scrapers/run-script/${id}`)\r\n    }\r\n\r\n    const editEvaluatorObjectsHandler = () => {\r\n        setEditingEvaluatorObjects(prev =>true);\r\n    }\r\n\r\n    const setEvaluatorObjectsHandler = (evaluatorObjects, state, setLoading, setMessage, setStatus) => {\r\n        \r\n        setLoading(true);\r\n        setStatus(\"info\");\r\n        setMessage(\"Updating the Evalutors\");\r\n\r\n        console.log(`${baseUrl}/api/scrapers/${id}`);\r\n        console.log(evaluatorObjects);\r\n\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({...scraperDetails, evaluatorObjects})\r\n        })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We had problems reaching the server... We couldn't update the evaluators.\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setLoading(false);\r\n                setStatus(\"success\");\r\n                setMessage(\"We have successfully updated the evaluators.\");\r\n\r\n\r\n                setScraperDetails(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        evaluatorObjects,\r\n                    }\r\n                });\r\n                setTimeout(() => setEditingEvaluatorObjects(prev => state), 777);\r\n\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                setStatus(\"error\");\r\n                setMessage(err.message);\r\n            });\r\n\r\n        \r\n        // save the data to database...\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setEditingEvaluatorObjects(prev => false)\r\n    }\r\n\r\n    const deleteScriptHandler = () => {\r\n        setIsLoading(true);\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"DELETE\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.statusOk)    {\r\n                    setMessage(\"We have successfully deleted the scraper script\");\r\n                    setIsLoading(false);\r\n                    setMessageType(\"success\");\r\n                    setTimeout(() => history.push(`/manage-scrapers/`), 2500);\r\n                } else  {\r\n                    setMessage(\"We were not able to delete the scraper script\");\r\n                    setIsLoading(false);\r\n                    setMessageType(\"success\");\r\n                    setModalOpen(false);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setMessage(err.message);\r\n                setIsLoading(false);\r\n                setMessageType(\"error\");\r\n                setModalOpen(false);\r\n                // console.log(err)\r\n            });\r\n\r\n        \r\n    }\r\n\r\n    const modalSetter = (value) => {\r\n        setModalOpen(prev => value);\r\n\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(scraperDetails);\r\n        // console.log(editingEvaluatorObjects);\r\n\r\n        \r\n\r\n\r\n    }, [modalOpen, scraperDetails])\r\n\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            {/* {message && <Alert severity={messageType}>{message}</Alert>} */}\r\n\r\n            {\r\n                editingEvaluatorObjects && \r\n\r\n                <Card>\r\n                    \r\n                    {scraperDetails && scraperDetails.evaluatorObjects && <EditEvaluators currentValue={scraperDetails.evaluatorObjects} setEvaluatorObjectsHandler={setEvaluatorObjectsHandler} cancelHandler={cancelHandler}></EditEvaluators>}\r\n\r\n                </Card>\r\n\r\n\r\n\r\n            }\r\n            {!editingEvaluatorObjects && <Card>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n                {scraperDetails && \r\n                <>\r\n                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                    <div className={styles[\"details-container\"]}>\r\n                        \r\n\r\n                        \r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Site Resource Info : </p>\r\n                            <ul>\r\n                                <li><span className={styles[\"label\"]}>Site Name</span> : {scraperDetails.siteName}</li>\r\n                                <li><span className={styles[\"label\"]}>Site Url</span> : {scraperDetails.siteUrl}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Scraper Details : </p>\r\n                            <ul>\r\n                                <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                    <ul>\r\n                                        <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                        <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Evaluator Objects : </p>\r\n                            <ul>\r\n                                {scraperDetails.evaluatorObjects.map((item, index) => {\r\n                                    return (\r\n                                        <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                            <ul>\r\n                                                <li>\r\n                                                    <div className={styles[\"label\"]}>Callback : </div>\r\n                                                    <FormControl>\r\n                                                        {/* onChange, padding, value, style, placeholder */}\r\n                                                        <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                        {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                                    </FormControl>\r\n                                                </li>\r\n                                                {item.waitMethods.length > 0 && <li>\r\n                                                    <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                    <ul>\r\n                                                        {item.waitMethods.map((method, i) => {\r\n                                                            return (\r\n                                                                <li key={i}>\r\n                                                                    <ul>\r\n                                                                        <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                        <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                    \r\n                                                </li>}\r\n                                                {\r\n                                                    item.type === \"list\" && \r\n                                                    <li>\r\n                                                        <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                        {item.paginated.toString()}\r\n                                                    </li>\r\n                                                }\r\n                                                {\r\n                                                    item.type !== \"list\" && \r\n                                                    <>\r\n                                                        <li>\r\n                                                            <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                            {item.objPropArgs.join(\", \")}\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                            {item.productUrlProp}\r\n                                                        </li>\r\n                                                    </>\r\n                                                }\r\n                                                \r\n                                            </ul>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div>\r\n                                <p className={styles[\"template-section-title\"]}>Developer's comment on usage : </p>\r\n                                <ul>\r\n                                    <li><span className={styles[\"label\"]}>Usage</span> : {scraperDetails.usage}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div>\r\n                                <p className={styles[\"template-section-title\"]}>Product Group / Set Identifier Key : </p>\r\n                                <ul>\r\n                                    <li><span className={styles[\"label\"]}>Key</span> : {scraperDetails.groupIdentifierKey}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                }\r\n                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    \r\n                    <Button onClick={() =>modalSetter(true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                        Delete Script\r\n                    </Button>\r\n                    <Button onClick={editEvaluatorObjectsHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                        Edit Evaluators\r\n                    </Button>\r\n                    <Button onClick={executeScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<PlayIcon />} >\r\n                            Run the Script\r\n                    </Button>\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        onClose={() => modalSetter(false)}\r\n                        open={modalOpen}\r\n                        style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}\r\n                    >\r\n    \r\n                            <Alert severity=\"error\" style={{minHeight : \"300px\", minWidth : \"250px\", paddingRight : \"2rem\"}}>\r\n                                <h4 style={{color : \"rgb(201, 85, 85)\"}}className={styles[\"template-section-title\"]}>Deleting the Script?</h4>\r\n                                <Divider style={{margin : \".7rem 0 1.4rem\"}} />\r\n                                <p>Are you sure you want to delete this awesome script?</p>\r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                    \r\n                                    {!isLoading && !messageType &&\r\n                                        <>\r\n                                        <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                            Delete Script\r\n                                        </Button>\r\n                                        \r\n                                        <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 159 171)\", color : \"white\"}} disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n\r\n\r\n                                    {isLoading && \r\n                                        <>\r\n                                            <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                                Delete Script\r\n                                            </Button>\r\n                                            <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n\r\n                                    {!isLoading && messageType === \"success\" &&\r\n                                        <>\r\n                                            <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Check />}>\r\n                                                Script Deleted\r\n                                            </Button>\r\n                                            <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </Alert>\r\n\r\n                    </Modal>\r\n                </div>\r\n            </Card>}\r\n            \r\n        </EmptyCardFlex>\r\n    )\r\n}","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\nimport { Button, FormControl, CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\nimport Select from \"../../components/Select\";\r\n\r\n\r\n//config\r\nimport { baseUrl, fileUrl } from \"../../config/\"; \r\nimport { toNormalString } from \"../../utilities/string\";\r\n\r\n\r\n// styles\r\nimport styles from \"./ScrapedData.module.scss\";\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n\r\n    let {authToken, fileToken} = useAuth(),\r\n        history = useHistory(),\r\n\r\n        // collections of data\r\n        {data : siteResources, fetchMessage, isLoading : fetchLoading} = useFetch(`/api/site-resources/`, {}, []),\r\n        {data : scrapers, fetchMessage : scrapersFetchMessage, isLoading : isScrapersDataLoading} = useFetch(`/api/scrapers/`, {}, []),\r\n        {data : productSets} = useFetch(`/api/product-sets`, {}, []),\r\n        \r\n\r\n        // filtered data\r\n        [filteredScrapers, setFilteredScrapers] = useState([]),\r\n        [filteredProductSets, setFilteredProductSets] = useState([]),\r\n        [siteResource, setSiteResource] = useState(null),\r\n        [scraper, setScraper] = useState(null),\r\n        [productSet, setProductSet] = useState(null),\r\n\r\n\r\n        // productsData;\r\n\r\n        [productsData, setProductsData] = useState([]),\r\n\r\n\r\n        // next action states // downloading and saving;\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null),\r\n        [downloadingZip, setDownloadingZip] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n    // set site resource by select\r\n    const selectSiteResourceHandler = (value) => {\r\n        setSiteResource(prev => siteResources.find(item => item.siteName === value));\r\n        setFilteredScrapers(prev => {\r\n            return scrapers.filter(item => item.siteName === value);\r\n        });\r\n        setFilteredProductSets(prev => []);\r\n        setProductSet(prev => null);\r\n        setScraper(prev => null);\r\n        setDownloadingZip(prev => false);\r\n    }\r\n\r\n    // set productBrand by select\r\n    const selectScraperHandler = (value) => {\r\n        setScraper(prev => filteredScrapers.find(item => item.productBrand === value));\r\n        setFilteredProductSets(prev => {\r\n            return productSets.filter(item => item.productBrand === value)\r\n        });\r\n        setProductSet(prev => null);\r\n    }\r\n\r\n    // productSet handler\r\n    const selectProductSetHandler = (value) => {\r\n        setProductSet(prev => filteredProductSets.find(item => item.groupIdentifier === value));\r\n    }\r\n\r\n    const createUrl = () => {\r\n        let url = `${baseUrl}`;\r\n        if(scraper) {\r\n            url += `${scraper.apiRoute}/`;\r\n            if(productSet)  {\r\n                url += `all?${scraper.groupIdentifierKey}=${productSet.groupIdentifier}`;\r\n            }\r\n            return url;\r\n        } else  {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const downloadZipHandler = (e) => {\r\n        e.preventDefault();\r\n        setDownloadingZip(true);\r\n\r\n        let { dataDirPath : dirPath, productBrand, groupIdentifier } = productSet,\r\n            { apiRoute } = scraper;\r\n        // productsData\r\n            \r\n\r\n        fetch(`${baseUrl}/api/script/create-csv-saved-data/`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({dirPath, productBrand, groupIdentifierKey : scraper.groupIdentifierKey, groupIdentifier, apiRoute, csvExcludedProps : scraper.csvExcludedProps}),\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                setDownloadingZip(false);\r\n\r\n                let {filePath} = data,\r\n                    downloadUrl = `${fileUrl}${fileToken}?filePath=${filePath}&qType=download`;\r\n                \r\n                // console.log(downloadUrl);\r\n\r\n                let aElem = document.createElement(\"a\");\r\n                aElem.setAttribute(\"href\", downloadUrl);\r\n                aElem.setAttribute(\"download\", true);\r\n                aElem.setAttribute(\"target\", \"_blank\");\r\n                aElem.click();\r\n\r\n                aElem.remove();\r\n            })\r\n            .catch(err => {\r\n                setDownloadingZip(false);\r\n                console.log(err.message)\r\n            });\r\n    }\r\n\r\n\r\n    // side effects\r\n\r\n    useEffect(() => {\r\n        if(fetchLoading)    {\r\n            setIsLoading(prev => fetchLoading);\r\n            setMessage(prev => fetchMessage);\r\n            setStatus(prev => \"info\");\r\n        } else  {\r\n            setStatus(null);\r\n            setMessage(null);\r\n            setIsLoading(null);\r\n        }\r\n        \r\n\r\n    }, [fetchLoading, fetchMessage])\r\n\r\n    useEffect(() => {\r\n        let url = createUrl();\r\n\r\n        if(url) {\r\n\r\n            // setIsLoading(prev => true);\r\n            // setStatus(prev => \"info\");\r\n            // setMessage(\"Currently Loading data...\");\r\n\r\n            fetch(url, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                }\r\n            })\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw Error(\"We couldn't reach the server...\")\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setProductsData(prev => data);\r\n                    if(data.length) {\r\n                        \r\n\r\n                        // setIsLoading(prev => false);\r\n                        // setStatus(prev => \"success\");\r\n                        // setMessage(\"We have successfully fetched the data\");\r\n                    } else  {\r\n                        // setIsLoading(prev => false);\r\n                        // setStatus(prev => \"success\");\r\n                        // setMessage(\"Query is valid, although we don't have any saved data for this set of products.\");\r\n                    }\r\n                    \r\n                })\r\n                .catch(err => {\r\n                    // setIsLoading(prev => false);\r\n                    // setStatus(prev => \"error\");\r\n                    // setMessage(err.message);\r\n                })\r\n\r\n        } else  {\r\n            setProductsData(prev => []);\r\n        }\r\n\r\n    }, [scraper, productSet]);\r\n\r\n\r\n    \r\n    return  (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n\r\n            \r\n\r\n            <EmptyCardFlex >\r\n                <Card>\r\n                <h3 className={styles[\"template-section-title\"]}>Please use the filter to display data...</h3>\r\n                <div className={styles[\"select-container\"]}>\r\n                    {siteResources.length > 0 && scrapers.length > 0 && <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={siteResource} selectOnchangeHandler={selectSiteResourceHandler} label=\"Site Resource\" options={siteResources.map(item=> ({...item, labelName : `${item.siteName} - ${item.siteUrl}`}))} uniqueProp=\"siteName\" optionLabelProp=\"labelName\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    {filteredScrapers.length > 0 && productSets.length > 0 &&\r\n                    <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={scraper} selectOnchangeHandler={selectScraperHandler} label=\"Product Line / Brand\" options={filteredScrapers} uniqueProp=\"productBrand\" optionLabelProp=\"productBrand\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    {filteredProductSets.length > 0 && \r\n                    <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={productSet} selectOnchangeHandler={selectProductSetHandler} label={toNormalString(scraper.groupIdentifierKey)} options={filteredProductSets} uniqueProp=\"groupIdentifier\" optionLabelProp=\"groupIdentifier\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    \r\n                </div>\r\n                </Card>\r\n            </EmptyCardFlex>  \r\n            {isLoading && \r\n                <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {message &&\r\n                    <Alert severity={status}>\r\n                        {status === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {message}\r\n                    </Alert>\r\n                }\r\n                </EmptyCardFlex>\r\n            }\r\n            <EmptyCardFlex style={{display : \"grid\"}}>\r\n            {productsData.length > 0 && \r\n                <Card>\r\n                    {productSet && <div className={styles[\"action-buttons-container\"]}>\r\n                       \r\n                        {!downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disableElevation startIcon={<DownloadIcon />}>\r\n                            Download CSV files and Images\r\n                        </Button>}\r\n\r\n                        {downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                            Downloading CSV files and Images\r\n                        </Button>}\r\n                        \r\n                    </div>}\r\n\r\n                    <MuiTable tableData={productsData} uniqueId=\"_id\" excludedColumns={[\"imageUris\", \"dateCreated\", \"cardUri\", \"__v\", \"productUri\", \"multiFaced\"]}></MuiTable>\r\n\r\n                </Card>\r\n            }\r\n            </EmptyCardFlex>\r\n        </EmptyCardFlex>\r\n    )\r\n}","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useParams } from \"react-router\";\r\nimport  { baseUrl } from \"../../../config\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../../components/MuiTable\";\r\n\r\n\r\n// styles\r\nimport styles from \"./ScrapedDataTable.module.scss\"\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n    let { authToken } = useAuth(),\r\n        { apiRoute } = useParams(),\r\n        { data : scraperDetails } = useFetch(`/api/scrapers/single?apiRoute=/api/${apiRoute}`),\r\n        [productData, setProductData] = useState(null),\r\n        [siteName, setSiteName] = useState(\"\"),\r\n        [productBrand, setProductBrand] = useState(\"\"),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [hasError, setHasError] = useState(false);\r\n        \r\n\r\n    useEffect(() => {\r\n        if(scraperDetails.apiRoute)    {\r\n            let queryString = window.location.search;\r\n\r\n            setIsLoading(\"We are currently loading the data...\");\r\n            setSiteName(prev => scraperDetails.siteName);\r\n            setProductBrand(prev => scraperDetails.productBrand);\r\n\r\n\r\n            fetch(`${baseUrl}${scraperDetails.apiRoute}/all${queryString}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"x-auth-token\" : authToken,\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(dataObject => {\r\n                    setIsLoading(false);\r\n                    \r\n                    if(Array.isArray(dataObject))    {\r\n                        setHasError(false);\r\n                        setProductData(prev => dataObject);\r\n                    } else  {\r\n                        throw Error(dataObject.message)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setHasError(err.message);\r\n                })\r\n        }\r\n    }, [scraperDetails])\r\n\r\n    return  (\r\n        <>  \r\n            \r\n\r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                    \r\n                <Card>\r\n                    {siteName && !isLoading && !hasError &&\r\n                        <h1 className=\"page-title\">{siteName} - <span className={styles[\"highlighted\"]}>{productBrand}</span></h1>}\r\n                    {!siteName && !isLoading && !hasError &&\r\n                        <h1 className=\"page-title\">{pageTitle}</h1>}\r\n                    {isLoading && !hasError && <h1 className=\"page-title\">{isLoading}</h1>}\r\n                    {hasError && <h1 className=\"page-title\">{hasError}</h1>}\r\n\r\n\r\n                    {productData && <MuiTable tableData={productData} uniqueId=\"_id\" excludedColumns={[\"imageUris\", \"dateCreated\", \"cardUri\", \"__v\", \"productUri\", \"multiFaced\"]}></MuiTable>}\r\n                </Card>\r\n            </EmptyCardFlex>  \r\n        </>\r\n    )\r\n}","export default function ManageScrapedData({pageTitle}) {\r\n    return (\r\n        <>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n        </>\r\n    )\r\n}","export default function ManageScrapedData({pageTitle}) {\r\n    return (\r\n        <>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n        </>\r\n    )\r\n}","import EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport styles from \"./Page404.module.scss\";\r\n\r\nexport default function Page404()   {\r\n    return (\r\n        <EmptyCardFlex className={styles[\"page404-container\"]}>\r\n            <h2 className={styles[\"page404-error\"]}>404 Error : Page not found</h2>\r\n            \r\n        </EmptyCardFlex>\r\n    )\r\n}","// core\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\n// Layout\r\nimport Layout from \"./Layout\";\r\n\r\n// routes \r\nimport routes from \"./routes\";\r\n\r\n// views \r\n    import Login from \"./views/Login\";\r\n    import Dashboard from \"./views/Dashboard\";\r\n\r\n    // Manage Scrapers\r\n    import ManageScrapers from \"./views/ManageScrapers\";\r\n        import CreateScraper from \"./views/ManageScrapers/CreateScraper/\";\r\n        import RunScraperScript from \"./views/ManageScrapers/RunScraperScript/RunScraperScript\";\r\n        import ScraperDetails from \"./views/ManageScrapers/ScraperDetails\";\r\n\r\n    // Scraped Data\r\n    import ScrapedData from \"./views/ScrapedData\";\r\n        import ScrapedDataTable from \"./views/ScrapedData/ScrapedDataTable\";\r\n\r\n    // Manage Users\r\n    import ManageUsers from \"./views/ManageUsers\";\r\n\r\n    // Manage Tasks\r\n    import ManageTasks from \"./views/ManageTasks\";\r\n\r\n    // MY Profile\r\n    import MyProfile from \"./views/MyProfile\";\r\n\r\n\r\n    // 404\r\n    import Page404 from \"./views/Page404/Page404\";\r\n\r\n\r\n\r\n// css\r\nimport styles from \"./MainComponent.module.scss\";\r\n\r\nexport default function Main()  {\r\n\r\n    const getRoute = (route) => {\r\n        return routes.find(item => item.path === route);\r\n    }\r\n\r\n    const getChildRoute = (route) => {\r\n        let parentRoute = routes.find(item => route.includes(item.path));\r\n        return parentRoute.children.find(item => item.path === route);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <Router>\r\n                <Switch>\r\n\r\n                    <Route path=\"/\" exact>\r\n                        <Layout><Dashboard pageTitle=\"Scraper Admin Dashboard\" /></Layout>\r\n                    </Route>\r\n\r\n                    {/* {ManageScrapers} */}\r\n                    <Route path=\"/manage-scrapers\" exact>\r\n                        <Layout><ManageScrapers pageTitle={getRoute(\"/manage-scrapers\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/manage-scrapers/create-scraper/\" exact>\r\n                            <Layout><CreateScraper pageTitle=\"Create a Scraper Script\" /></Layout>\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/manage-scrapers/run-script/:id\" exact>\r\n                            <Layout><RunScraperScript pageTitle=\"Run Scraper Script\" /></Layout>\r\n                        </Route>\r\n\r\n                        <Route path=\"/manage-scrapers/:id\" exact>\r\n                            <Layout><ScraperDetails pageTitle=\"Scraper Details : \" /></Layout>\r\n                        </Route>\r\n\r\n                    \r\n                    {/* Scraped Data */}\r\n                    <Route path=\"/scraped-data/\" exact>\r\n                        <Layout><ScrapedData pageTitle={getRoute(\"/scraped-data\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/scraped-data/:apiRoute\">\r\n                            <Layout><ScrapedDataTable pageTitle=\"Scraped Data : \" /></Layout>\r\n                        </Route>\r\n\r\n                    {/* Manage Users */}\r\n                    <Route path=\"/manage-users\" exact>\r\n                        <Layout><ManageUsers pageTitle={getRoute(\"/manage-users\").title} /></Layout>\r\n                    </Route>\r\n\r\n                    {/* Tasks*/}\r\n                    <Route path=\"/manage-tasks\" exact>\r\n                        <Layout><ManageTasks pageTitle={getRoute(\"/manage-tasks\").title} /></Layout>\r\n                    </Route>\r\n\r\n                    {/* My Profile */}\r\n                    <Route path=\"/my-profile\" exact>\r\n                        <Layout><ManageTasks pageTitle=\"My Profile\" /></Layout>\r\n                    </Route>\r\n\r\n                    {/* Login */}\r\n                    <Route path=\"/login\" exact>\r\n                        <Login  />\r\n                    </Route>\r\n\r\n\r\n                    <Route path=\"/\" >\r\n                        <Layout><Page404 pageTitle={\"Page 404\"} /></Layout>\r\n                    </Route>\r\n                    \r\n                    \r\n                </Switch>\r\n                \r\n            </Router>\r\n        </div>\r\n    );\r\n}","import { blue,blueGrey, green, lightBlue, orange, purple, red, yellow } from '@material-ui/core/colors';\r\nimport { createTheme, darken } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({  \r\n    palette: {\r\n        primary: blue,\r\n        secondary: blueGrey,\r\n        error: red,\r\n    },\r\n    typography: {\r\n        button: {\r\n            textTransform: 'none',\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","// Main Component\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainComponent from \"./MainComponent\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';    \nimport { ThemeProvider } from \"@material-ui/styles\";\n\n\nimport \"./Reset.scss\";\nimport \"./App.scss\";\nimport \"./Defaults.scss\";\n\nfunction App() {\n\t\n\treturn (\n\t\t<Router>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<MainComponent />\n\t\t\t\t</div>\n\t\t\t</ThemeProvider>\n\t\t</Router>\n\n  \t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \t<React.StrictMode>\n    \t<App />\n  \t</React.StrictMode>,\n  \tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"Login_template-title__3HeaR\",\"highlighted\":\"Login_highlighted__mwJI9\",\"highlighted-2\":\"Login_highlighted-2__AbQSq\",\"template-subtitle\":\"Login_template-subtitle__2EJqv\",\"template-section-title\":\"Login_template-section-title__3J7L0\",\"error-message\":\"Login_error-message__192RR\",\"description\":\"Login_description__2efaS\",\"buttons-container\":\"Login_buttons-container__2hRmy\",\"field-container\":\"Login_field-container__2Lyo9\",\"select-container\":\"Login_select-container__3KaLz\",\"main-container\":\"Login_main-container__qk8so\",\"action-buttons-container\":\"Login_action-buttons-container__18zCf\",\"form-container\":\"Login_form-container__2h7sF\",\"logo-container\":\"Login_logo-container__2rXLf\",\"site-name\":\"Login_site-name__ppjh3\",\"logo\":\"Login_logo__2K-FY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1nqzN\",\"active\":\"Nav_active__9yukH\",\"selected\":\"Nav_selected__3FBIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"CreateScraper_template-title__3AdDm\",\"highlighted\":\"CreateScraper_highlighted__2qTu1\",\"template-subtitle\":\"CreateScraper_template-subtitle__1Lgbe\",\"template-section-title\":\"CreateScraper_template-section-title__13Ssa\",\"error-message\":\"CreateScraper_error-message__1B-co\",\"description\":\"CreateScraper_description__3DWGa\",\"buttons-container\":\"CreateScraper_buttons-container__1eOyG\",\"create-scraper-container\":\"CreateScraper_create-scraper-container__3X0-q\",\"site-resource-card\":\"CreateScraper_site-resource-card__2_Ver\",\"site-resource-select-container\":\"CreateScraper_site-resource-select-container__2324t\",\"json-data\":\"CreateScraper_json-data__12uJv\",\"label\":\"CreateScraper_label__1vOVA\",\"container\":\"CreateScraper_container__8eBYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"CreateSiteResource_form-container__p6rkl\",\"template-title\":\"CreateSiteResource_template-title__Y3MG_\",\"form\":\"CreateSiteResource_form__17gO9\",\"input-container\":\"CreateSiteResource_input-container__2dSI8\",\"buttons-container\":\"CreateSiteResource_buttons-container__2nv8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ScrapedData_template-title__1zciU\",\"highlighted\":\"ScrapedData_highlighted__1S5f-\",\"highlighted-2\":\"ScrapedData_highlighted-2__2u-Rc\",\"template-subtitle\":\"ScrapedData_template-subtitle__rq8A3\",\"template-section-title\":\"ScrapedData_template-section-title__3mjg-\",\"error-message\":\"ScrapedData_error-message__3odXm\",\"description\":\"ScrapedData_description__3ESNh\",\"buttons-container\":\"ScrapedData_buttons-container__LZl9l\",\"field-container\":\"ScrapedData_field-container__n9Qta\",\"select-container\":\"ScrapedData_select-container__GMexO\",\"main-container\":\"ScrapedData_main-container__19d9J\",\"action-buttons-container\":\"ScrapedData_action-buttons-container__gl9cE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-container\":\"SelectSiteResources_select-container__1-JiI\",\"template-title\":\"SelectSiteResources_template-title__1U8_p\",\"site-resource-info-container\":\"SelectSiteResources_site-resource-info-container__3_EoZ\",\"buttons-container\":\"SelectSiteResources_buttons-container__3rckh\"};"],"sourceRoot":""}